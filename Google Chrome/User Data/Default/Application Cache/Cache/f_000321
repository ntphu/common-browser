/**
 * Created by HuyNT2
 * User:
 * Date: 12/17/13
 * Time: 5:35 PM
 */
var accountInTempl;
var temptranfer;
var gSourceVal;
var tmpDestinationCardAcc;
var mng;
var smlBankArr;
var tempBankArr = new Array();
var gCardObj;
var flgCard = false;
var tmpPayeeType;
var statusInputCardAcc;
var scheObj;
var gEdit = null;
trans_type="transfer";
var gDisabledLuuMau = false;
var mng = CONST_VAL_PAYEE_NOT_TEMPLATE[1];
function RecentObj(){
    this.partnerName = "";
    this.partnerNumber = "";
    this.transToBank = "";
    this.transValue = "";
    this.transContent = "";
    this.transTime = "";
    this.idNo = "";
 }
function loadInitXML(){
    return '';

}
var comboAcc;
function initComboTextAccount(){
    console.log("init combo text account");
    var accountName = "Invalid";
    var accountNumber = "Invalid";
    var accountBalance = "Invalid";

    try{
        document.getElementById("holder-account-info").innerHTML = "";
        var accountName = gUserInfo.accountName;
        var accountNumber = gUserInfo.accountList[0].accountNumber;
        var accountBalance = formatNumberToCurrency(gUserInfo.accountList[0].balanceAvailable)+'&nbsp'+gUserInfo.accountList[0].currency;
    }catch(e){
        logInfo("khong load duoc thong tin tai khoan");
    }

    comboAcc = new Combo({
        containerId : "cb-container", //holder of combo
        accountName : accountName, //account name
        accountNumber : accountNumber, //account number
        accountBalance : accountBalance, //account balance
        borderColor : "yellow", // border color
        containerPadding : "0px", // set padding to holder of combo
        containerMargin : "0px",
        showBorderTop : false,
        fontSize : "15px",
        showBorderBottom : false,//set margin to holder of combo
        clickIt : function (){ //handle function click
            console.log("already click");
        }
    });
    comboAcc.show("holder-account-info");
}
function initTextAreaMessage(){
    try{
        var txtArea = document.getElementById('trans.content');
        if(txtArea!==null){
            return false;
        }
        document.getElementById("holder-transfer-message").innerHTML = "";
    }catch(e){}
    var textAreaEl = new TextAreaLNH({
        containerMargin : "0px",
        idTextArea : "trans.content",
        placeholder : CONST_STR.get("PLACEHOLDER_TRANSFER_CONTENT"),
        iconClass : "icon-content-note",
        textColor : "white",
        borderColor : "rgba(255, 255, 255, 0.3)",
        showBorderBottom : true,
        showBorderTop : true,
        fontSizeIcon : "24px",
        lengthmax : "100",
        validateInput : function(){
            console.log("validate function");
        }
    });
    textAreaEl.show("holder-transfer-message");
}
function initTodayDate(){
    var txt = getDate("today");
    try{document.getElementById("trans.today").innerHTML = CONST_STR.get('TODAY_TITLE') + ', ' +  txt}catch(e){};
}
function callbackCloseDialogSchedulerTransfer(){
    console.log("click on x in the top");
    bottomBar.resumeView('transfer/transfer-card-create-scr','transfer-card');
    actionbar.showActionBar();
}

function callbackLoadScheduleTransferXlsSuccess(){
    var array = (gUserInfo.lang == 'EN') ? CONST_KEY_PERIODIC_FREQUENCY_EN : CONST_KEY_PERIODIC_FREQUENCY_VN;
    var today = getDate("today");
    if(scheObj.type === array[0]){
        //chi 1 lan
        document.getElementById("holder-date-transfer").style.display = "block";
        document.getElementById("holder-start-end-date").style.display = "none";
       // document.getElementById("holder-calendar-day-week").style.display = "none";
        document.getElementById("holder-calendar-pick").style.display = "none";
        document.getElementById("date-transfer").innerHTML = scheObj.dayTransfer;
        document.getElementById("type-schedule-value").innerHTML = array[0];
    }else if(scheObj.type  === array[1]){
        //hang ngay
        document.getElementById("holder-start-end-date").style.display = "block";
       // document.getElementById("holder-calendar-day-week").style.display = "none";
        document.getElementById("holder-date-transfer").style.display = "none";
        document.getElementById("holder-calendar-pick").style.display = "none";
        document.getElementById("start-date-value").innerHTML = scheObj.startDate;
        document.getElementById("end-date-value").innerHTML = scheObj.endDate;
        document.getElementById("type-schedule-value").innerHTML = array[1];
    }else if (scheObj.type  === array[2]){
        //hang tuan
        document.getElementById("holder-start-end-date").style.display = "block";
      //  document.getElementById("holder-calendar-day-week").style.display = "none";
        document.getElementById("holder-date-transfer").style.display = "none";
        document.getElementById("holder-calendar-pick").style.display = "none";
        document.getElementById("start-date-value").innerHTML = scheObj.startDate;
        document.getElementById("end-date-value").innerHTML = scheObj.endDate;
        document.getElementById("type-schedule-value").innerHTML = array[2];

    }else if(scheObj.type  === array[3]){
        //hang thang
        document.getElementById("holder-start-end-date").style.display = "block";
        document.getElementById("holder-date-transfer").style.display = "none";
        //document.getElementById("holder-calendar-day-week").style.display = "none";
        document.getElementById("holder-calendar-pick").style.display = "none";
        document.getElementById("start-date-value").innerHTML = scheObj.startDate;
        document.getElementById("end-date-value").innerHTML = scheObj.endDate;
        document.getElementById("date-transfer").innerHTML = scheObj.dayTransfer;
        document.getElementById("type-schedule-value").innerHTML = array[3];
    }else if(scheObj.type  == array[4]){
        //hang nam
        document.getElementById("holder-start-end-date").style.display = "block";
        document.getElementById("holder-date-transfer").style.display = "none";
       // document.getElementById("holder-calendar-day-week").style.display = "none";
        document.getElementById("holder-calendar-pick").style.display = "none";
        document.getElementById("start-date-value").innerHTML = scheObj.startDate;
        document.getElementById("end-date-value").innerHTML = scheObj.endDate;
        document.getElementById("date-transfer").innerHTML = scheObj.dayTransfer;
        document.getElementById("type-schedule-value").innerHTML = array[4];
    }
    modalDialog.showDialogFull();

}
function initSchedulerTransferDialog(){
    initDialog(CONST_STR.get("HEADER_TITLE_TRANSFER_SCHEDULE"),"","transfer/transfer-schedule",callbackCloseDialogSchedulerTransfer,callbackLoadScheduleTransferXlsSuccess,false);
}
function showDialogScheduler(){
    actionbar.hideActionbar();
    bottomBar.hide();
    initSchedulerTransferDialog();
}
var lastClickSwitch;
function onChangeSwitchSubMenu(e){
    var clickTime = new Date().getTime();
    if(idDiv =="save-doc-temp-transfer" && gDisabledLuuMau && document.getElementById('save-doc-temp-transfer').className.indexOf('custom-switch-on') ==-1){
		return;
	}
    lastClickSwitch = clickTime;
	var idDiv = e.id;
	if(idDiv =="save-doc-temp-transfer" && gDisabledLuuMau){
		return;
	}
    var inputNode = e.getElementsByTagName('input')[0];
    if(inputNode) {
        inputNode.checked = !inputNode.checked;
    }
    changeSwitchUI(e);

    if(e.id =="save-doc-temp-transfer" && inputNode.checked){
        document.getElementById("id.sample.name").value = "";
        document.getElementById("id.sample").style.display = "";
    }else if(e.id == "save-doc-temp-transfer" && !inputNode.checked){
        document.getElementById("id.sample").style.display = "none";
    }
}

function setSchedulerTransfer(){
    var type = document.getElementById("type-schedule-value").innerHTML;
    var startDate = document.getElementById("start-date-value").innerHTML;
    var endDate = document.getElementById("end-date-value").innerHTML;
    var array = (gUserInfo.lang == 'EN') ? CONST_KEY_CALENDAR_DAYNAME_EN : CONST_KEY_CALENDAR_DAYNAME_VN;
  //  var dayInWeek = getDayInWeekSelected();
    var dayTransfer = document.getElementById("date-transfer").innerHTML;

    var arrLang = (gUserInfo.lang == 'EN') ? CONST_KEY_PERIODIC_FREQUENCY_EN : CONST_KEY_PERIODIC_FREQUENCY_VN;

    var check = checkDateTimeScheduleType({
        arrLang: arrLang,
        type: type,
        startDate: startDate,
        endDate: endDate,
        //dayInWeek: dayInWeek,
        dayTransfer : dayTransfer
    });
    console.log(check);
    if(check)
    {
        scheObj = new shedulerObj({
            type : type,
            startDate : startDate,
            endDate : endDate,
           // dayInWeek : dayInWeek,
            dayTransfer : dayTransfer
        });
        console.log(scheObj);
		var arrCheck = checkValueInArray(arrLang,scheObj.type);
		if(arrCheck[0] && arrCheck[1] == 0 && validateCheckDateNow(dayTransfer)){
            if(document.getElementById('save-doc-temp-transfer').className.indexOf('custom-switch-on') != -1){
                onChangeSwitchSubMenu(document.getElementById('save-doc-temp-transfer'));
            }
            gDisabledLuuMau = true;
        }else if(arrCheck[0] && arrCheck[1] == 0 && !validateCheckDateNow(dayTransfer)){
			gDisabledLuuMau = false;
		}else{
            if(document.getElementById('save-doc-temp-transfer').className.indexOf('custom-switch-on') != -1){
                onChangeSwitchSubMenu(document.getElementById('save-doc-temp-transfer'));
            }
            gDisabledLuuMau = true;
        }
        showDescriptionTransfer(scheObj);
        if(scheObj.type === arrLang[0]){
            updateDayTransferScreen('trans.today',scheObj.dayTransfer);
        }else{
            updateDayTransferScreen('trans.today',scheObj.startDate);
        }
        showDescriptionTransfer(scheObj);
        modalDialog.hideDialogFull();
        bottomBar.resumeView('transfer/transfer-card-create-scr','transfer-card');
        actionbar.showActionBar();
    }
}
function initBottomBar(){
    gHisTypeTranfer = 19;
    var arrBottom = new Array();
    arrBottom.push(new MenuBottom("BOTTOM_BAR_RECENTLY", "icon-recents"));
    arrBottom.push(new MenuBottom("BOTTOM_BAR_TEMPLATE_TRANSFER", "icon-template"));
    arrBottom.push(new MenuBottom("BOTTOM_BAR_CONTACT", "icon-beneficiaries"));
    arrBottom.push(new MenuBottom("BOTTOM_BAR_SCHEDULE_TRANSFER", "icon-scheduled-transfers-list"));

    latestParam = new LatestParam(CONSTANTS.get("CMD_TRANSFER_GET_HIS_TRANSACTION"),gCustomerNo,CONST_PAYEE_FAST_TRANS_CARD);
    transferParam = new TransferParam(CONSTANTS.get("CMD_TRANSFER_TEMPLATE_TEMPLATE"),'',2);
    contactParam = new ContactParam(CONSTANTS.get("CMD_TYPE_LOOKUP_PAYEE"),CONST_PAYEE_FAST_TRANS_CARD,'ALL',false);
    periodParam = new PeriodParam(CONSTANTS.get("CMD_TRANSFER_PERIODIC_MNG_TRANS"),'FCR');

    navController.initBottomBarWithCallBack("transfer/transfer-card-create-scr", arrBottom, "transfer-card", function (index) {
        //alert(index);
        switchAction(index);
    });
    // dung de phan biet mau chuyen tien, khi sua mau chuyen tien
    gEdit = 3;
}
function switchAction(index){
    switch(index)
    {
        case "0":
            // template gan day
            initDialog(CONST_STR.get('BOTTOM_BAR_RECENTLY'),"","transfer/his-trans-scr",
                function callbackDialogClose(){

                    callbackCloseDialogSchedulerTransfer();
                },
                function callbackDialogLoadSuccess(){

                    modalDialog.showDialogFull();
                    actionbar.hideActionbar();
                    bottomBar.hide();
                },true,callbackContactTranfer);
            break;

        case "1":
            // template mau chuyen tien
            initDialog(CONST_STR.get('BOTTOM_BAR_TEMPLATE_TRANSFER'),"","transfer/template-transfer-doc",
                function callbackDialogClose(){
                    callbackCloseDialogSchedulerTransfer();
                },
                function callbackDialogLoadSuccess(){

                    modalDialog.showDialogFull();
                    actionbar.hideActionbar();
                    bottomBar.hide();
                },true,callbackDocTranfer);
            break;
        case "2":
            // template danh ba
            initDialog(CONST_STR.get('BOTTOM_BAR_CONTACT'),"","transfer/template-contact-doc",
                function callbackDialogClose(){
                    callbackCloseDialogSchedulerTransfer();
                },
                function callbackDialogLoadSuccess(){
                    modalDialog.showDialogFull();
                    actionbar.hideActionbar();
                    bottomBar.hide();
                    firstLetterArray = [];
                    bgrColorArray = [];
                },true,callbackContactTranfer);
            break;
        case "3":
            // template
            initDialog(CONST_STR.get('BOTTOM_BAR_SCHEDULE_TRANSFER'),"","transfer/period-trans-command",
                function callbackDialogClose(){
                    callbackCloseDialogSchedulerTransfer();
                },
                function callbackDialogLoadSuccess(){
                    //callbackLoadSuccess
                    modalDialog.showDialogFull();
                    actionbar.hideActionbar();
                    bottomBar.hide();
                },true);
            break;
    }
}

function viewDidLoadSuccess() {
    logInfo('transfer load success');

    //mng = CONST_VAL_PAYEE_NOT_TEMPLATE[0];
    //mng = CONST_VAL_PAYEE_NOT_TEMPLATE[1];

    if(flgCard == false || flgCard == undefined){
        initComboTextAccount();
        initTextAreaMessage();
        initTodayDate();
        initBottomBar();
        scheObj = new tempSchedulerObj();
        if(gUserInfo.lang == 'EN'){
            //document.getElementById('id.selcfunc').value = CONST_KEY_FAST_TRANS_OPT_EN[0];
            //document.getElementById('id.payee').value = CONST_VAL_PAYEE_NOT_TEMPLATE_EN[0];
            document.getElementById('id.payee').value = CONST_VAL_PAYEE_NOT_TEMPLATE_EN[1];
        }else{
            //document.getElementById('id.selcfunc').value = CONST_KEY_FAST_TRANS_OPT_VN[0];
            //document.getElementById('id.payee').value = CONST_VAL_PAYEE_NOT_TEMPLATE_VN[0];
            document.getElementById('id.payee').value = CONST_VAL_PAYEE_NOT_TEMPLATE_VN[1];
        }
        document.getElementById('id.accountno').value = gUserInfo.accountList[0].accountNumber;
        var nodeAccBal = document.getElementById("trans.sourceaccoutbalance");

        //nodeAccBal.innerHTML = "<h6 class='h6style'>" + CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE') + ": <b>" + formatNumberToCurrency(gUserInfo.accountList[0].balanceAvailable) + "</b>"+"<b> VND</b>"+"</h6>";
        nodeAccBal.innerHTML = "<div class='availblstyle'>" + CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE') + ": " + formatNumberToCurrency(gUserInfo.accountList[0].balanceAvailable) + " VND"+"</div>";

        gSourceVal = gUserInfo.accountList[0].balanceAvailable;
        mng = CONST_VAL_PAYEE_NOT_TEMPLATE[1];

        //flgCard = true;
    }
    if ((statusInputCardAcc == true) && (currentPage == "transfer/transfer-card-create-scr")) 	{
        ///alert("Transfer local create load success: " + tmpDestinationCardAcc);

        var destinationAcc = document.getElementById("trans.targetaccountcard");
        if (tmpDestinationCardAcc != undefined && tmpDestinationCardAcc != '')
        {
            destinationAcc.value = tmpDestinationCardAcc;
        }
        var payeeDesc = document.getElementById("id.payee");

        var tmpArray1 = (gUserInfo.lang == 'EN')? CONST_VAL_PAYEE_NOT_TEMPLATE_EN: CONST_VAL_PAYEE_NOT_TEMPLATE_VN;
        var tmpArray2 = CONST_VAL_PAYEE_NOT_TEMPLATE;

        if (tmpPayeeType != '')
        {
            //mng = tmpPayeeType;
            var check = false;
            for (var i = 0; i < tmpArray2.length; i++)
            {
                if (tmpArray2[i] == mng)
                {
                    payeeDesc.value = tmpArray1[i];
                    check = true;
                }
            }
            if (mng == CONST_VAL_PAYEE_NOT_TEMPLATE[0])
            {
                payeeDesc.setAttribute('disabled', 'disabled');
                payeeDesc.setAttribute('onclick', '');
            }
            else{
                //payeeDesc.setAttribute('disabled', '');
                //payeeDesc.removeAttribute('disabled');
                //payeeDesc.setAttribute('onclick', 'showInputMNG()');
                payeeDesc.setAttribute('disabled', 'disabled');
                payeeDesc.setAttribute('onclick', '');
            }
        }
        else
        {
            /*mng = CONST_VAL_PAYEE_NOT_TEMPLATE[0] ;
             payeeDesc.value = tmpArray1[0];*/
            mng = CONST_VAL_PAYEE_NOT_TEMPLATE[1] ;
            payeeDesc.value = tmpArray1[1];
            payeeDesc.setAttribute('disabled', '');
            payeeDesc.removeAttribute('disabled');
            payeeDesc.setAttribute('onclick', 'showInputMNG()');
        }


        setTimeout(function(e) { statusInputCardAcc = false; }, 1000); //fix double click
    }
    //handle input transfer content
    setInputCharNumberAndUpcase('trans.content', CONST_STR.get("ERR_INPUT_ONLY_ASCII_CHAR"));
    setInputOnlyASCIILNH('id.sample.name',CONST_STR.get("MODEL_TRANSFER_ERR2"))
    //ngocdt chinh chi cho nhap so the number
    setInputOnlyNumber('trans.targetaccountcard',CONST_STR.get("ERR_INPUT_ONLY_NUMBER"));
    loadbgbank();

    genSequenceFormFastCard();
    actionbar.addListSequence("transfer/transfer-card-create-scr");
    swipeToSave();
    document.addEventListener('evtChangeWidthMobile',closeDialogSwitchMode,false);
    document.addEventListener('evtChangeWidthDesktop',closeDialogSwitchMode,false);
}
function swipeToSave(){
    var el1 = document.getElementById('save-receiver');
    var el2 = document.getElementById('save-doc-temp-transfer');
    swipedetect(el1, function(swipedir,touchsurface){
        if (swipedir == 'left'||swipedir == 'right'){
            onChangeSwitchSubMenu(touchsurface);
        }
    });
    swipedetect(el2, function(swipedir,touchsurface){
        if (swipedir == 'left'||swipedir == 'right'){
            onChangeSwitchSubMenu(touchsurface);
        }
    });
}
/*** VIEW BACK FROM OTHER ***/

function viewBackFromOther() {
    logInfo('Back from other view');
    flgCard = true;
}

/*** VIEW BACK FROM OTHER ***/

function viewWillUnload() {
    //flgPeriodic = true;
    //flgCard = false;
    logInfo('transfer will unload');
    document.removeEventListener('evtChangeWidthMobile',closeDialogSwitchMode,false);
    document.removeEventListener('evtChangeWidthDesktop',closeDialogSwitchMode,false);
}


function showAccountSelection() {
    var tmpArray1 = [];
    var tmpArray2 = [];
    for (var i=0; i<gUserInfo.accountList.length; i++) {
        var tmpAcc = gUserInfo.accountList[i];
        tmpArray1.push(tmpAcc.accountNumber);
        tmpArray2.push(formatNumberToCurrency(tmpAcc.balanceAvailable) + '&nbsp' + tmpAcc.currency);
    }

    document.addEventListener("evtSelectionDialog", handleSelectionAccountList, false);
    document.addEventListener("evtSelectionDialogClose", handleSelectionAccountListClose, false);
    showDialogList(CONST_STR.get('TRANS_LOCAL_DIALOG_TITLE_ACC'), tmpArray1, tmpArray2, true);
}

function showPayeePage()
{

    gPayeeCode = CONST_PAYEE_FAST_TRANS_CARD;
    document.addEventListener("evtSelectionDialogInput", handleInputPayeeAccOpen, false);
    document.addEventListener("evtSelectionDialogCloseInput", handleInputPayeeAccClose, false);

    document.addEventListener("onInputSelected", okSelected, false);
    //Tao dialog
    dialog = new DialogListInput(CONST_STR.get('TRANS_CARD_NO_TITLE'), 'ALL', gPayeeCode);

    dialog.showDialog(callbackShowDialogSuccessed, '');
}
function callbackShowDialogSuccessed(node){
    dialog.hiddenTab2();
}
function handleInputPayeeAccOpen(e){
    if (currentPage == "transfer/transfer-card-create-scr") {
        handleInputPayeeAccClose();
        if(e.tabSelected == 'tab1'){
            var obj = e.dataObject;
            tmpPayeeType = obj.transType;
            tmpDestinationAccName = obj.transValue;
            var destinationAcc = document.getElementById("trans.targetaccountcard");
            destinationAcc.value = tmpDestinationAccName;
            var payeelist = document.getElementById('id.payee');
            //payeelist.disabled = 'true';
            /*var destinationAcc = document.getElementById("trans.targetaccount");
             var nodeDesAcc = document.getElementById("trans.targetaccountname");

             destinationAcc.value = obj.transValue;
             nodeDesAcc.innerHTML = "<h6 class='h6style'>" + CONST_STR.get('TRANS_LOCAL_ACC_DESTINATION_TITLE') + ": <b>" + obj.peopleName + "</b></h6>";*/
        }else{
        }
    }
}

function handleInputPayeeAccClose(e){
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("evtSelectionDialogClose", handleInputPayeeAccClose, false);
        document.removeEventListener("evtSelectionDialog", handleInputPayeeAccOpen, false);
        //document.removeEventListener("tabChange", tabChanged, false);
        document.removeEventListener("onInputSelected", okSelected, false);
    }
}

function okSelected(e){

    //tmpDestinationAcc = "";
    //tmpDestinationAccName = "";
    if (currentPage == "transfer/transfer-card-create-scr") {
        handleInputPayeeAccClose();
        var destinationAcc = document.getElementById("trans.targetaccountcard");

        if ((e.selectedValue != undefined) &&(e.selectedValue != null) && (e.selectedValue.length>0)){
            tmpDestinationCardAcc = e.selectedValue;
        }
        if (tmpDestinationCardAcc != undefined && tmpDestinationCardAcc != '')
        {
            destinationAcc.value = tmpDestinationCardAcc;
            //loadLocalTransSuccess();
        }
    }
}


/*function handleInputPayeeAcc(e) {
 document.removeEventListener("evtInputPayeeAccount", handleInputPayeeAcc, false);
 //alert('input value: ' + e.inputValue);
 tmpDestinationCardAcc = e.inputValue;
 if (e.payeeObject != null)
 {
 tmpPayeeType = e.payeeObject.payeeType;
 tmpDestinationAccName = e.payeeObject.transValue;
 }
 else
 {
 tmpPayeeType = '';
 tmpDestinationAccName = '';
 }
 statusInputCardAcc = true
 }*/


function showInputAccScreen() {
    navController.pushToView('com-input-account', true);
    gHistoryCode = CONST_HISTORY_CODE[4];
    document.addEventListener("evtInputAccount", handleInputAcc, false);
}


//event listener: input account
//var statusInputCardAcc; //using check input account ready
function handleInputAcc(e) {
    document.removeEventListener("evtInputAccount", handleInputAcc, false);
    tmpDestinationCardAcc = e.inputValue;
    statusInputCardAcc = true;
}

//Format currency and pronounce to Vietnamese

function handleInputAmount (e, des) {
    var tmpVale = removeSpecialChar(des.value);
    if(tmpVale.length > 13){
        tmpVale = tmpVale.slice(0,13);
    }
    des.value = tmpVale;
    formatCurrency(e, des);
    var numStr = convertNum2WordWithLang(keepOnlyNumber(des.value), gUserInfo.lang);

    var nodeNumTxt = document.getElementById("trans.amounttotext");

    //nodeNumTxt.innerHTML = "<h6 class='h6style'>" + CONST_STR.get('TRANS_LOCAL_NUM_TO_WORD') + ": <b>" + numStr + "</b></h6>";
    //nodeNumTxt.innerHTML = "<div class='txtmoneystyle'>" + CONST_STR.get('TRANS_LOCAL_NUM_TO_WORD') + ": " + numStr + "</div>";
    nodeNumTxt.innerHTML = "<div class='txtmoneystyle'>" + numStr + "</div>";
}

//Send request
var gprsResp = new GprsRespObj("","","","");

var allconditions = {
    "amount":
    {
        "allow":"[,.0-9]",
        "notallow":"",
        "minlength":"0",
        "maxlength":"18",
        "func":"checkAmount"
    },
    "cardnumber":
    {
        "allow":"[0-9]",
        "notallow":"",
        "minlength":"16",
        "maxlength":"20",
        "func":""
    },
    "content":
    {
        "allow":"[a-zA-Z0-9]",
        "notallow":"",
        "minlength":"0",
        "maxlength":"200",
        "func":""
    },
    "account":
    {
        "allow":"[0-9]",
        "notallow":"",
        "minlength":"11",
        "maxlength":"11",
        "func":""
    }
}

function checkAmount(){
    var amountTrans = document.getElementById("trans.amount");
    var tempamount = removeSpecialChar(gSourceVal);
    var tmpStr;
    tmpStr = removeSpecialChar(amountTrans.value);
    if(tmpStr.length < 1) { // && tmpStr.length > 16){
        showAlertText(CONST_STR.get('ERR_INPUT_NO_AMOUNT'),amountTrans);
        return false;
    }
    if(parseInt(tmpStr)>parseInt(tempamount)){
        showAlertText(CONST_STR.get('TRANS_ERROR_AVAIL_BALANCE'),amountTrans);
        return false;
    }
    return true;

}
function checkCardNumber(inCardNo){
    /*if(!inCardNo || inCardNo.length < 16 || inCardNo.length > 20){
     showAlertText(CONST_STR.get('ERR_INPUT_NO_CARD_NUMBER'));
     return false;
     }*/
    var destinationAcc = document.getElementById("trans.targetaccountcard");
    inCardNo=destinationAcc.value;
    if (!inCardNo){
        showAlertText(CONST_STR.get('ERR_INPUT_NO_CARD_NUMBER'),destinationAcc);
        return false;
    }
    if (inCardNo.length < 16 || inCardNo.length > 20) {
        showAlertText(CONST_STR.get('ERR_INPUT_FORMAT_DES_ACC'),destinationAcc);
        return false;
    }
    return true;
}

function sendJSONRequest() {
    // collect the form data while iterating over the inputs
    var data = {};
    var arrayArgs = new Array();
    var sourceAcc = document.getElementById("id.accountno");
    var destinationAcc = document.getElementById("trans.targetaccountcard");
    var amountTrans = document.getElementById("trans.amount");
    var contentTrans = document.getElementById("trans.content");
    var sampleName = document.getElementById("id.sample.name");
    //var tmpStatus = validate(sourceAcc.value, destinationAcc.value,amountTrans.value,contentTrans.value);
    //if(!tmpStatus) return;
    var tmpStr = sourceAcc.value;
    var reText =/^[^!@#$%^&*_+\-=\[\]{}();':"\\|,.<>\/?]*$/;
    var reTextNew =/^[^!@#$%^*_+\=\[\]{}();':"\\|<>\?]*$/;
    if(!reTextNew.test(contentTrans.value)){
        showAlertText(CONST_STR.get('ERR_INCORRECT_TRANS_CONTENT'));
        return;
    }
    if(!reText.test(sampleName.value)){
        showAlertText(CONST_STR.get('MODEL_TRANSFER_ERR2'));
        return;
    }
    if(!validateFunc(sourceAcc.value, allconditions["account"])){
        showAlertText(CONST_STR.get('ERR_INPUT_FORMAT_ACC'));
        return;
    }

    if(!checkAmount()){
        return;
    }

    if(!checkCardNumber()){
        return;
    }

    if (!validateFunc(contentTrans.value, allconditions["content"])) {
        showAlertText(CONST_STR.get('ERR_INPUT_NO_CONTENT'),contentTrans);
        return;
    }
    if(!checkAvailableChar(contentTrans.value)) {
        showAlertText(CONST_STR.get('ERR_INCORRECT_TRANS_CONTENT'),contentTrans);
        return;
    }
    var checkLuuNguoiNhan  = document.getElementById('save-receiver').getElementsByTagName('input')[0];
    var checkLuuMauChuyenTien = document.getElementById('save-doc-temp-transfer').getElementsByTagName('input')[0];
    if(checkLuuMauChuyenTien.checked && checkLuuNguoiNhan.checked){
        mng = CONST_VAL_PAYEE[1] + "~" + CONST_VAL_PAYEE[2]  + "#" +  document.getElementById("id.sample.name").value;
    }else if(!checkLuuMauChuyenTien.checked && !checkLuuNguoiNhan.checked){
        mng = CONST_VAL_PAYEE[0] + "~";
    }else if(checkLuuMauChuyenTien.checked && !checkLuuNguoiNhan.checked){
        mng = CONST_VAL_PAYEE[2] + "#" +  document.getElementById("id.sample.name").value + "~";
    }else if(!checkLuuMauChuyenTien.checked && checkLuuNguoiNhan.checked){
        mng = CONST_VAL_PAYEE[1] + "~";
    }
    if(checkLuuMauChuyenTien.checked){
        if(temptranfer!=undefined||temptranfer!=null){
    var length=temptranfer.length;

    for (var i = 0; i < length; i++) {
        var items = temptranfer[i];

        if(checkLuuMauChuyenTien.checked&&sampleName.value==""){
            showAlertText(CONST_STR.get('MODEL_TRANSFER_ERR'),sampleName);
            return;
        }
        else if(checkLuuMauChuyenTien.checked&&sampleName.value==items['name']){
            showAlertText(CONST_STR.get('TEMPLATE_TRANSFER'),sampleName);
            return;
        }
    }
        }
}




    arrayArgs.push(sourceAcc.value);
    arrayArgs.push(destinationAcc.value);
    var amount = removeSpecialChar(amountTrans.value);
    arrayArgs.push(amount);
    arrayArgs.push(encodeURIComponent(contentTrans.value));
    arrayArgs.push(mng);

    var arrayLangType = (gUserInfo.lang == 'EN') ? CONST_KEY_PERIODIC_FREQUENCY_EN : CONST_KEY_PERIODIC_FREQUENCY_VN;
    var today = getDate("today");
    var daySelected = scheObj.dayTransfer;
    if(scheObj.type === arrayLangType[0] && today === daySelected){
        //keep services same as version 7 : 150
        var gprsCmd = new GprsCmdObj(CONSTANTS.get("CMD_TYPE_TRANSFER_CARD"), "", "", gUserInfo.lang, gUserInfo.sessionID, arrayArgs);
        data = getDataFromGprsCmd(gprsCmd);
        requestMBService(data, true, 0, requestMBServiceSuccess, requestMBServiceFail);
    }else{
        //service code 83 : khi dat lich la ngay tuong lai hoac khach hang chon dat lich theo tan suat
        var flagCheck = "";
        if(scheObj.type === arrayLangType[0] ){
            flagCheck = "FUR";
        }else{
            flagCheck = "PRD";
        }
        arrayArgs.push(flagCheck === "PRD" ? "" : convertDateToService(scheObj.dayTransfer));//Ngày chuyển
        arrayArgs.push(flagCheck === "PRD" ? convertDateToService(scheObj.startDate) : "");//ngay bat dau
        arrayArgs.push(flagCheck === "PRD" ? convertDateToService(scheObj.endDate) : "");//ngay ket thuc
        if(flagCheck === "PRD" && scheObj.type !== arrayLangType[0]){
            arrayArgs.push(getDescType(scheObj.type));//tan suat
        }else{
            arrayArgs.push("");//tan suat
        }
        arrayArgs.push(flagCheck);
        var gprsCmd = new GprsCmdObj(CONSTANTS.get("CMD_PRD_INTER_FAST_TRANS_CARD"), "", "", gUserInfo.lang, gUserInfo.sessionID, arrayArgs);
        data = getDataFromGprsCmd(gprsCmd);
        requestMBService(data, true, 0, requestMBServiceSuccess, requestMBServiceFail);
    }



    //document.addEventListener("evtHttpSuccess", requestMBServiceSuccess, false);
    //document.addEventListener("evtHttpFail", requestMBServiceFail, false);



    //update account change after success
    //updateAccountInfoIfNeed(sourceAcc.value, CONSTANTS.get("CMD_TYPE_TRANSFER_CARD"));
}

//event listener: http request success
function requestMBServiceSuccess(e){
    gprsResp = parserJSON(e);
    setRespObjStore(gprsResp); //store response

    /*
     if((gprsResp.respCode != '0') && (parseInt(gprsResp.responseType) == parseInt(CONSTANTS.get("CMD_FAST_TRANS_SML_BANKCODE") || (gprsResp.responseType == '-1')))){
     //navController.initWithRootView('account/account-scr', true);
     var tmpPageName = navController.getDefaultPage();
     var tmpPageType = navController.getDefaultPageType();
     navController.initWithRootView(tmpPageName, true, tmpPageType);
     }
     */
    if ((checkResponseCodeSuccess(gprsResp.respCode) || gprsResp.respCode == CONSTANTS.get("COM_FINGERPRINT_OVER_LIMIT") || gprsResp.respCode == CONSTANTS.get("COM_FINGERPRINT_OVER_DATE_LIMIT"))
        && (parseInt(gprsResp.responseType) == parseInt(CONSTANTS.get("CMD_TYPE_TRANSFER_CARD")))) 				    {
        //parserLocalTrans();
        gCardObj = new Array();
        gCardObj = gprsResp.arguments;
        genReviewScreen();

    }else if ((checkResponseCodeSuccess(gprsResp.respCode) || gprsResp.respCode == CONSTANTS.get("COM_FINGERPRINT_OVER_LIMIT") || gprsResp.respCode == CONSTANTS.get("COM_FINGERPRINT_OVER_DATE_LIMIT"))
        && (parseInt(gprsResp.responseType) == parseInt(CONSTANTS.get("CMD_PRD_INTER_FAST_TRANS_CARD")))) 				    {
        //parserLocalTrans();
        gCardObj = new Array();
        gCardObj = gprsResp.arguments;
        genReviewScreen();

    }
    else if (gprsResp.respCode = '2003' && (parseInt(gprsResp.responseType) == parseInt(CONSTANTS.get("CMD_TYPE_TRANSFER_CARD")))) {
        gCardObj = new Array();
        gCardObj = gprsResp.arguments;
        genCacheReviewScreen();
        navController.pushToView("com-verify-password", true);
    }
    /*logInfo('request transfer local create success');
     if ((e.type == "evtHttpSuccess") && (currentPage == "transfer/transfer-card-create-scr")) {
     document.removeEventListener("evtHttpSuccess", requestMBServiceSuccess, false);
     }*/
};

//event listener: http request fail
function requestMBServiceFail(e){
    //navController.initWithRootView('account/account-scr', true);
    //var tmpPageName = navController.getDefaultPage();
    //var tmpPageType = navController.getDefaultPageType();
    //navController.initWithRootView(tmpPageName, true, tmpPageType);
};

//LOADING SCREEN EVENT

/*document.addEventListener("evtLoadPageSuccess", function(e){
 if ((statusInputCardAcc || (tmpDestinationCardAcc && tmpDestinationCardAcc != '')) && (currentPage == "transfer/transfer-card-create-scr")) {
 ///alert("Transfer local create load success: " + tmpDestinationCardAcc);

 var destinationAcc = document.getElementById("trans.targetaccountcard");
 destinationAcc.value = tmpDestinationCardAcc;
 setTimeout(function(e) { statusInputCardAcc = false; }, 1000); //fix double click
 }

 }, false);*/

//event: selection dialog list
function handleSelectionAccountList(e) {
    if (currentPage == "transfer/transfer-card-create-scr") {
        //document.removeEventListener("evtSelectionDialog", handleSelectionAccountList, false);
        handleSelectionAccountListClose(e);
        comboAcc.refresh({
            accountNumber : e.selectedValue1,
            accountBalance : e.selectedValue2
        });
        if ((e.selectedValue1 != undefined) && (e.selectedValue1 != null)) {
            var tagAccNo = document.getElementById("id.accountno");
            if (tagAccNo.nodeName == "INPUT") {
                tagAccNo.value = e.selectedValue1;
            }
            else {
                tagAccNo.innerHTML = e.selectedValue1;
            }
        }
        var nodeAccBal = document.getElementById("trans.sourceaccoutbalance");
        if (e.selectedValue2 != undefined) {
            //nodeAccBal.innerHTML = "<h6 class='h6style'>" + CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE') + ": <b>" + e.selectedValue2 + "</b>"+"<b> VND</b>"+"</h6>";
            nodeAccBal.innerHTML = "<div class='availblstyle'>" + CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE') + ": " + e.selectedValue2 + " VND"+"</div>";
            gSourceVal = e.selectedValue2;
        }
    }
}

function handleSelectionAccountListClose(e) {
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("evtSelectionDialogClose", handleSelectionAccountListClose, false);
        document.removeEventListener("evtSelectionDialog", handleSelectionAccountList, false);
    }
}

function parserLocalTrans() {
    //parser info
    //gprsResp
}


function genReviewScreen() {
    //var nodeReviewInfo = document.getElementById("panelContent");
    var sourceAcc = document.getElementById('id.accountno');
    var destrans = document.getElementById('trans.content');
    var amount = document.getElementById('trans.amount');
    var targetaccount = document.getElementById('trans.targetaccountcard');
    var payeeType = document.getElementById('id.payee');
    var descriptionTrans = "";
    var arrayLangType = (gUserInfo.lang == 'EN') ? CONST_KEY_PERIODIC_FREQUENCY_EN : CONST_KEY_PERIODIC_FREQUENCY_VN;
    if(scheObj.type == arrayLangType[0]){
        descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_ONCE_TIME")+" "+scheObj.dayTransfer;
    }
	else if(scheObj.type == arrayLangType[1]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_DAILY")+" "+scheObj.startDate+ " "+CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else if(scheObj.type == arrayLangType[2]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_WEEKLY")+" "+scheObj.startDate+ " "+CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else if(scheObj.type == arrayLangType[3]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_MONTHLY")+" "+scheObj.startDate+ " "+CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else if(scheObj.type == arrayLangType[4]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_YEARLY")+" "+scheObj.startDate+" "+ CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else{
        descriptionTrans = scheObj.startDate;
    }
    var docXml = createXMLDoc();
    var tmpXmlRootNode;
    //root node
    var tmpXmlRootNode = createXMLNode('review', '', docXml);
    //review/reviewtitle //screen title
    var tmpXmlNodeInfo = createXMLNode('reviewtitle', CONST_STR.get('REVIEW_TITLE_SCREEN'), docXml, tmpXmlRootNode);
    //review/reviewinfo/reviewtranstitle
    var tmpXmlNodeInfo = createXMLNode('reviewinfo','', docXml, tmpXmlRootNode);
    var tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', CONST_STR.get('COM_TXT_ACC_INFO_TITLE'), docXml, tmpXmlNodeInfo);

    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_TYPE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', CONST_STR.get('FAST_TRANS_CARD_SELCT_BG'), docXml, tmpChildNodeAcc);
    //noi dung chuyen tien
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_ACCNO_AMOUNT_DES'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', destrans.value, docXml, tmpChildNodeAcc);
    //phi
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_FEE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', formatNumberToCurrencyWithSymbol(gCardObj[3],' VND'), docXml, tmpChildNodeAcc);
    //ngay chuyen
    var today = new Date();
    var dd = today.getDate();
    var mm = today.getMonth()+1; //January is 0!

    var yyyy = today.getFullYear();
    if(dd<10){
        dd='0'+dd
    }
    if(mm<10){
        mm='0'+mm
    }
    var today = dd+'/'+mm+'/'+yyyy;

    //execute date
    tmpChildNodeTrans = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('DAY_TRANSFER'), docXml, tmpChildNodeTrans);
    tmpChildNode = createXMLNode('transinfocontent', descriptionTrans, docXml, tmpChildNodeTrans);

    /*var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
     var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_ACC_TITLE'), docXml, tmpChildNodeAcc);
     tmpChildNode = createXMLNode('transinfocontent', sourceAcc.value, docXml, tmpChildNodeAcc);

     var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
     var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE'), docXml, tmpChildNodeAcc);
     tmpChildNode = createXMLNode('transinfocontent', formatNumberToCurrency(gSourceVal) + ' VND', docXml, tmpChildNodeAcc);
     tmpChildNode = createXMLNode('transinfodisplay', 'review', docXml, tmpChildNodeAcc); //display or not in result*/

    //review/reviewinfo/reviewtranstitle
    tmpXmlNodeInfo = createXMLNode('reviewinfo', '', docXml, tmpXmlRootNode);
    tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', CONST_STR.get('COM_TXT_ACC_CONFIRM_TRANS_TITLE'), docXml, tmpXmlNodeInfo);
    //ngan hang
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_BANK_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', gCardObj[2], docXml, tmpChildNodeAcc);

    //so the nhan
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_CARD_NO_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent',targetaccount.value, docXml, tmpChildNodeAcc);
    //nguoi nhan
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_ACC_DESTINATION_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent',  gCardObj[1], docXml, tmpChildNodeAcc);

    tmpXmlNodeInfo = createXMLNode('reviewinfo', '', docXml, tmpXmlRootNode);
    tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', CONST_STR.get('HEADER_TRANSFER_TO'), docXml, tmpXmlNodeInfo);
    //so tien
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_AMOUNT_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', amount.value + ' VND', docXml, tmpChildNodeAcc);



    /*var balance = keepOnlyNumber(gSourceVal);//gSourceVal.replace(/,/g,'');
     var amounttemp = removeSpecialChar(amount.value);
     var fee = keepOnlyNumber(gCardObj[3]);
     var balanceCont = balance - amounttemp - parseInt(fee);

     //balance cont
     tmpChildNodeTrans = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
     tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_BALANCE_CONT'), docXml, tmpChildNodeTrans);
     tmpChildNode = createXMLNode('transinfocontent', formatNumberToCurrencyWithSymbol(balanceCont,' VND'), docXml, tmpChildNodeTrans);
     tmpChildNode = createXMLNode('transinfodisplay', 'review', docXml, tmpChildNodeTrans);
     //so tai khoan nguoi thu huong
     var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
     var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('MANAGE_BENEFICIARY'), docXml, tmpChildNodeAcc);
     tmpChildNode = createXMLNode('transinfocontent', payeeType.value, docXml, tmpChildNodeAcc);*/



    logInfo(docXml);
    //luu xml trong cache
    setReviewXmlStore(docXml);

    navController.pushToView("com-review-xsl-scr", true, 'xsl');
}

function genCacheReviewScreen() {
    var sourceAcc = document.getElementById('id.accountno');
    var destrans = document.getElementById('trans.content');
    var amount = document.getElementById('trans.amount');
    var targetaccount = document.getElementById('trans.targetaccountcard');
    var payeeType = document.getElementById('id.payee');
    var descriptionTrans = "";
    var arrayLangType = (gUserInfo.lang == 'EN') ? CONST_KEY_PERIODIC_FREQUENCY_EN : CONST_KEY_PERIODIC_FREQUENCY_VN;
    if(scheObj.type == arrayLangType[0]){
        descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_ONCE_TIME")+" "+scheObj.dayTransfer;
    }
	else if(scheObj.type == arrayLangType[1]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_DAILY")+" "+scheObj.startDate+" "+ CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else if(scheObj.type == arrayLangType[2]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_WEEKLY")+" "+scheObj.startDate+" "+ CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else if(scheObj.type == arrayLangType[3]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_MONTHLY")+" "+scheObj.startDate+ " "+CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else if(scheObj.type == arrayLangType[4]){
		 descriptionTrans = CONST_STR.get("DESCRIPTION_TRANSFER_YEARLY")+" "+scheObj.startDate+" "+ CONST_STR.get("DESCRIPTION_TRANSFER_TO_DATE")+ " "+scheObj.endDate;
	}
	else{
        descriptionTrans = scheObj.startDate;
    }
    var docXml = createXMLDoc();
    var tmpXmlRootNode;
    //root node
    var tmpXmlRootNode = createXMLNode('review', '', docXml);
    //review/reviewtitle //screen title
    var tmpXmlNodeInfo = createXMLNode('reviewtitle', CONST_STR.get('REVIEW_TITLE_SCREEN'), docXml, tmpXmlRootNode);
    //review/reviewinfo/reviewtranstitle
    var tmpXmlNodeInfo = createXMLNode('reviewinfo','', docXml, tmpXmlRootNode);
    var tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', CONST_STR.get('COM_TXT_ACC_INFO_TITLE'), docXml, tmpXmlNodeInfo);

    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_TYPE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', CONST_STR.get('FAST_TRANS_CARD_SELCT_BG'), docXml, tmpChildNodeAcc);
    //noi dung chuyen tien
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_ACCNO_AMOUNT_DES'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', destrans.value, docXml, tmpChildNodeAcc);
    //phi
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_FEE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', formatNumberToCurrencyWithSymbol(gCardObj[3],' VND'), docXml, tmpChildNodeAcc);
    //ngay chuyen
    var today = new Date();
    var dd = today.getDate();
    var mm = today.getMonth()+1; //January is 0!

    var yyyy = today.getFullYear();
    if(dd<10){
        dd='0'+dd
    }
    if(mm<10){
        mm='0'+mm
    }
    var today = dd+'/'+mm+'/'+yyyy;

    //execute date
    tmpChildNodeTrans = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('DAY_TRANSFER'), docXml, tmpChildNodeTrans);
    tmpChildNode = createXMLNode('transinfocontent', descriptionTrans, docXml, tmpChildNodeTrans);

    //review/reviewinfo/reviewtranstitle
    tmpXmlNodeInfo = createXMLNode('reviewinfo', '', docXml, tmpXmlRootNode);
    tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', CONST_STR.get('COM_TXT_ACC_CONFIRM_TRANS_TITLE'), docXml, tmpXmlNodeInfo);
    //ngan hang
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    //var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_BANK_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', CONST_STR.get('TRANS_BANK_TITLE')+': '+gCardObj[2], docXml, tmpChildNodeAcc);

    //so the nhan
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    //var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_CARD_NO_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent',CONST_STR.get('TRANS_CARD_NO_TITLE')+': '+ targetaccount.value, docXml, tmpChildNodeAcc);
    //nguoi nhan
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    //var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_ACC_DESTINATION_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent',CONST_STR.get('TRANS_LOCAL_ACC_DESTINATION_TITLE')+': '+ gCardObj[1], docXml, tmpChildNodeAcc);

    tmpXmlNodeInfo = createXMLNode('reviewinfo', '', docXml, tmpXmlRootNode);
    tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', CONST_STR.get('HEADER_TRANSFER_TO'), docXml, tmpXmlNodeInfo);
    //so tien
    var tmpChildNodeAcc = createXMLNode('transinfo', '', docXml, tmpXmlNodeInfo);
    var tmpChildNode = createXMLNode('transinfotitle', CONST_STR.get('TRANS_LOCAL_AMOUNT_TITLE'), docXml, tmpChildNodeAcc);
    tmpChildNode = createXMLNode('transinfocontent', amount.value + ' VND', docXml, tmpChildNodeAcc);

    logInfo(docXml);
    //luu xml trong cache
    setReviewXmlStore(docXml);
}

//select function
function showSelection(){
    /*var tmpArray1 = (gUserInfo.lang == 'EN')? CONST_KEY_FAST_TRANS_OPT_EN: CONST_KEY_FAST_TRANS_OPT_VN;
     var tmpArray2 = CONST_VAL_FAST_TRANS_OPT;
     document.addEventListener("evtSelectionDialog", handleSelectionBGN, false);
     document.addEventListener("evtSelectionDialogClose", handleSelectionBGNClose, false);
     showDialogList(CONST_STR.get('TRANS_PERIODIC_BTN_SELECT_FUNC'), tmpArray1, tmpArray2, false);*/
    var tmpArray1 = (gUserInfo.lang == 'VN')? [CONST_STR.get('FAST_TRANS_CARD_SELCT_BG')]:[CONST_STR.get('FAST_TRANS_CARD_SELCT_BG')];
    document.addEventListener("evtSelectionDialog", handleSelectionBGN, false);
    document.addEventListener("evtSelectionDialogClose", handleSelectionBGNClose, false);
    showDialogList(CONST_STR.get('TRANS_PERIODIC_BTN_SELECT_FUNC'), tmpArray1, false);
}
function handleSelectionBGN(e) {
    if (currentPage == "transfer/transfer-card-create-scr") {
        if ((e.selectedValue1 != undefined) && (e.selectedValue1 != null)) {
            handleSelectionBGNClose();
        }
    }
}

function handleSelectionBGNClose(){
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("evtSelectionDialogClose", handleSelectionBGNClose, false);
        document.removeEventListener("evtSelectionDialog", handleSelectionBGN, false);
    }
}


function showInputMNG()
{
    var tmpArray1 = (gUserInfo.lang == 'EN')? CONST_VAL_PAYEE_NOT_TEMPLATE_EN: CONST_VAL_PAYEE_NOT_TEMPLATE_VN;
    var tmpArray2 = CONST_VAL_PAYEE_NOT_TEMPLATE;
    document.addEventListener("evtSelectionDialog", handleInputMNG, false);
    document.addEventListener("evtSelectionDialogClose", handleInputMNGClose, false);
    showDialogList(CONST_STR.get('TRANS_PERIODIC_MGN_PAYEE_SELCT'), tmpArray1, tmpArray2, false);
}


function handleInputMNG(e)
{
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("evtSelectionDialog", handleInputMNG, false);

        if ((e.selectedValue1 != undefined) && (e.selectedValue1 != null)) {
            var mnglist = document.getElementById('id.payee');
            if (mnglist.nodeName == "INPUT") {
                mnglist.value = e.selectedValue1;
            }
            else {
                mnglist.innerHTML = e.selectedValue1;
            }

        }

        if ((e.selectedValue2 != undefined) && (e.selectedValue2 != null)) {
            mng = e.selectedValue2;
        }

    }
}

function handleInputMNGClose() {
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("evtSelectionDialogClose", handleInputMNGClose, false);
        document.removeEventListener("evtSelectionDialog", handleInputMNG, false);
    }
}

function loadbgbank(){
    var data = {};
    var arrayArgs = new Array();
    arrayArgs.push('BK_CARD');
    var gprsCmd = new GprsCmdObj(CONSTANTS.get("CMD_FAST_TRANS_SML_BANKCODE"), "", "", gUserInfo.lang, gUserInfo.sessionID, arrayArgs);

    data = getDataFromGprsCmd(gprsCmd);

    //document.addEventListener("evtHttpSuccess", requestMBServiceSuccess, false);
    //document.addEventListener("evtHttpFail", requestMBServiceFail, false);

    //requestMBService(data, true, 0, requestMBServiceSuccess, requestMBServiceFail);
    requestBacgroundMBService('CMD_FAST_TRANS_SML_BANKCODE',arrayArgs,requestSmlBankSuccessCallback,requestSmlBankFailCallback);
}

function requestSmlBankSuccessCallback(oStr)
{
    gprsResp = parserJSON(oStr, false);
    setRespObjStore(gprsResp); //store response
    if ((gprsResp.respCode == '0') && (parseInt(gprsResp.responseType) == parseInt(CONSTANTS.get("CMD_FAST_TRANS_SML_BANKCODE")))) {
        smlBankArr = new Array();
        smlBankArr = gprsResp.arguments;
        genXmlBank();
    }
    //var tabh = document.getElementById("tabHost");
    //tabh.innerHTML = oStr;
}

function genXmlBank(){
    var tmpArr;
    for(var i=0;i<smlBankArr.length;i++){
        tmpArr = smlBankArr[i].split('#');
//		tempBankArr.push(tmpArr[1] +" - "+tmpArr[2]);
        tempBankArr.push((i+1)+". " + tmpArr[1]);
    }
}

function requestSmlBankFailCallback(){
    //showAlertText(CONST_STR.get('Không lấy được thông tin ngân hàng. Quý khách vui lòng liên hệ ... . .. . . . '));
    return;
}

function showBankName(){
    document.addEventListener("evtSelectionDialog", handleBankName, false);
    showDialogList(CONST_STR.get('TRANS_BANKS_LIST'), tempBankArr, true);
}

function handleBankName(){
    if(currentPage == "transfer/transfer-card-create-scr"){
        document.removeEventListener("evtSelectionDialog", handleBankName, false);

    }
}





//gen sequence form
function genSequenceFormFastCard() {
    //get sequence form xsl
    var tmpXslDoc = getCachePageXsl("sequenceform");
    //create xml
    //var tmpStepNo = 401;
    var tmpStepNo = 301;
    setSequenceFormIdx(tmpStepNo);
    var docXml = createXMLDoc();
    var tmpXmlRootNode = createXMLNode('seqFrom', '', docXml);
    var tmpXmlNodeInfo = createXMLNode('stepNo', tmpStepNo, docXml, tmpXmlRootNode);
    //gen html string
    genHTMLStringWithXML(docXml, tmpXslDoc, function(oStr){
        //var tmpNode = document.getElementById('seqFormFastCard');
        //tmpNode.innerHTML = oStr;
    });
}


/*START EVENT FOR BOTTOM BAR*/
function alertConfirmDocOK() {

    //check currentPage
    if (currentPage == "transfer/transfer-card-create-scr") {
        alertConfirmDocCancel();
        console.log(deleteNameContactDoc);
        if(deleteNameContactDoc!==null)
        {
            var arrayArgs = new Array();
            arrayArgs.push("D");
            arrayArgs.push(deleteNameContactDoc);
            for(var i = 0; i<7; i++){
                arrayArgs.push("");
            }
            var gprsCmd = new GprsCmdObj(CONSTANTS.get("CMD_TRANSFER_TEMPLATE_UPDATE"), "", "",gUserInfo.lang,gUserInfo.sessionID, arrayArgs);
            var data = getDataFromGprsCmd(gprsCmd);
            requestMBService(data, true, 0, callbackSuccessDelete, callbackFailsDelete);
        }
    }
}

function alertConfirmDocCancel() {
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("alertConfirmCancel", alertConfirmDocCancel, false);
        document.removeEventListener("alertConfirmOK", alertConfirmDocOK, false);
    }
}


function callbackSuccessDelete(respArr){
    accountInTempl = accountInTempl - 1;
    if(accountInTempl == 0){       
        document.getElementById('template-dk-right').style.display = 'none';
    }
    document.getElementById('cardAcc_' + tempindextranfer).style.display = 'none';
    viewtransfer(document.getElementById('cardAcc_0'),0);
}
function callbackFailsDelete(){
}

function getBalanceByAccNo(accNo){

    for (var i=0; i<gUserInfo.accountList.length; i++) {
        var tmpAcc = gUserInfo.accountList[i];
        if(accNo == tmpAcc.accountNumber){
            return gUserInfo.accountList[i].balanceAvailable;
        }
    }
    return '0';
}
function callbackDocTranfer(obj){
    console.log(obj);
    modalDialog.hideDialogFull();
    callbackCloseDialogSchedulerTransfer();
    // double click template tranfer doc
    var newBalance = getBalanceByAccNo(	obj.tai_khoan_nguon);
    comboAcc.refresh({
//        accountName : obj.name,
        accountNumber :obj.tai_khoan_nguon,
        accountBalance :  formatNumberToCurrency(newBalance)
    });
    document.getElementById('id.accountno').value = obj.tai_khoan_nguon;
    document.getElementById('trans.targetaccountcard').value = obj.tai_khoan_dich;
    document.getElementById('trans.content').value = obj.noi_dung;
    document.getElementById('trans.amount').value= formatNumberToCurrency(obj.so_tien);
	var numStr = convertNum2WordWithLang(removeSpecialChar(obj.so_tien), gUserInfo.lang);

        var nodeNumTxt = document.getElementById("trans.amounttotext");
        nodeNumTxt.innerHTML = "<div class='txtmoneystyle'>" + numStr + "</div>";
    tmpDestinationAccName = obj.tai_khoan_dich;
	if(obj.tai_khoan_nguon != ""){
            var newBalance = getBalanceByAccNo(	obj.tai_khoan_nguon);
			gSourceVal=newBalance;
            if(newBalance !=null && newBalance !=undefined){
                var balanceAcct = document.getElementById("trans.sourceaccoutbalance");
                balanceAcct.innerHTML = "<div class='availblstyle'>" + CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE') + ": " + formatNumberToCurrency(newBalance) + " VND" + "</div>";
            }
        }
}

function excuteSampleSelected(obj){
    if(obj != null && obj != undefined){
        //Everything initialized
        flag = true;
        statusInputAcc = true;
        if(obj.tai_khoan_nguon != ""){
            document.getElementById('id.accountno').value = obj.tai_khoan_nguon;
        }

        document.getElementById('trans.targetaccountcard').value = obj.tai_khoan_dich;

        document.getElementById('trans.content').value = obj.noi_dung;
        tmpDestinationAccName = obj.tai_khoan_dich;
        // loadLocalTransSuccess();

        //Số tiền
        if(obj.so_tien  != ""){
            var tmpVale = obj.so_tien;
            document.getElementById('trans.amount').value= formatNumberToCurrency(tmpVale);
        }

        var numStr = convertNum2WordWithLang(removeSpecialChar(tmpVale), gUserInfo.lang);

        var nodeNumTxt = document.getElementById("trans.amounttotext");

        //nodeNumTxt.innerHTML = "<div class='txtmoneystyle'>" + CONST_STR.get('TRANS_LOCAL_NUM_TO_WORD') + ": " + numStr + "</div>";
        nodeNumTxt.innerHTML = "<div class='txtmoneystyle'>" + numStr + "</div>";

        //Tên tài khoản nhận
        //tmpDestinationAccName = obj.ten_tai_khoan_dich;
        // var nodeDesAcc = document.getElementById("trans.targetaccountname");
        //nodeDesAcc.innerHTML = "<h6 class='h6style'>" + CONST_STR.get('TRANS_LOCAL_ACC_DESTINATION_TITLE') + ": <b>" +obj.ten_tai_khoan_dich + "</b></h6>";
        // var transferAccount = document.getElementById("trans.destaccountname");
        // transferAccount.value = obj.ten_tai_khoan_dich;
        // tmpDestinationAccName = obj.ten_tai_khoan_dich;

        //HIEN THI SO DU CUA TAI KHOAN NGUON
        if(obj.tai_khoan_nguon != ""){
            var newBalance = getBalanceByAccNo(	obj.tai_khoan_nguon);
            if(newBalance !=null && newBalance !=undefined){
                var balanceAcct = document.getElementById("trans.sourceaccoutbalance");
                balanceAcct.innerHTML = "<div class='availblstyle'>" + CONST_STR.get('COM_TXT_ACC_BALANCE_TITLE') + ": " + formatNumberToCurrency(newBalance) + " VND" + "</div>";
            }
        }
    }
}
// SHOW LIST BANK
function initDialogListBank(){
    initDialog(CONST_STR.get('TRANS_BANKS_LIST'),"","transfer/transfer-list-bank",callbackCloseListBankTransfer,callbackLoadListBankXlsSuccess,false);
}

function callbackCloseListBankTransfer() {
    console.log("click on x in the top");
    bottomBar.resumeView('transfer/transfer-card-create-scr','transfer-card');
    actionbar.showActionBar();
}

function callbackLoadListBankXlsSuccess() {
    var contentHTML = "";
    contentHTML += '<div class="list-group" style="margin: 15px;">';
    contentHTML += '<table width="100%" align="center" class="background-blacktrans">';


    for(i=0;i<tempBankArr.length;i++) {
        contentHTML += '<tr class="trow-default">';
        contentHTML += '<td style="width:10%">';
        contentHTML += '<div><span class="icon-homepage"></span></div>';
        contentHTML += '</td>';
        contentHTML += '<td style="width:90%" class="td-left-detail">';
        contentHTML += '<div>' +tempBankArr[i]+ '</div>';
        contentHTML += '</td>';
        contentHTML += '</tr>';
    }
    contentHTML += '</table>';
    contentHTML += '</div>';

    var divListView = document.getElementById("divListView");
    divListView.innerHTML = contentHTML;

    modalDialog.showDialogFull();
}
function showDialogBankAvaiable(){
    actionbar.hideActionbar();
    bottomBar.hide();
    initDialogListBank();
}

/*
 * METHODS FOR CHOOSE CONTACT
 * */
function callbackContactTranfer(obj) {
    if(modalDialog != undefined) modalDialog.hideDialogFull();
    callbackCloseDialogSchedulerTransfer();
    // double click template tranfer contact doc
//    trans.bankname
    tmpPayeeType = obj.transType;
    tmpDestinationAccName = obj.transValue;
    var destAccNo = document.getElementById("trans.targetaccountcard");
    destAccNo.value = obj.transValue;

}

function alertConfirmContactOK() {

    //check currentPage
    if (currentPage == "transfer/transfer-card-create-scr") {
        alertConfirmContactCancel();
        console.log(deleteContact);
        if(deleteContact!==null)
        {
            var arrayArgs = new Array();
            //gTransId
            arrayArgs.push(deleteContact.transactionId);
            //delete/update
            arrayArgs.push("DELETE");
            arrayArgs.push(deleteContact.payeeType);
            arrayArgs.push("");
            var gprsCmd = new GprsCmdObj(CONSTANTS.get("CMD_TYPE_UPDATE_BOOK_BENEFICIARY"), "", "", gUserInfo.lang, gUserInfo.sessionID, arrayArgs);


            var  data = getDataFromGprsCmd(gprsCmd);
            requestMBService(data, true, 0, requestMBContactDeleteSuccess, requestMBContactServiceDeleteFail);

        }
    }
}

function requestMBContactDeleteSuccess(respArr){
    document.getElementById('cardAcc_' + tempIndex).style.display = 'none';
    viewCardBank(document.getElementById("cardAcc_0"),0);

}
function requestMBContactServiceDeleteFail(){

}

function alertConfirmContactCancel() {
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("alertConfirmCancel", alertConfirmContactCancel, false);
        document.removeEventListener("alertConfirmOK", alertConfirmContactOK, false);
    }
}

/*lenh chuyen tien dinh ky */
function alertConfirmPeriodOK() {
    //check currentPage
    console.log("alertConfirmPeriodOK");
    if (currentPage == "transfer/transfer-card-create-scr") {
        alertConfirmPeriodCancel();
        console.log(deletePeriod);
        if(deletePeriod!==null)
        {
            var arrayArgs = new Array();
            //gTransId
            arrayArgs.push(deletePeriod.idTransaction);
            arrayArgs.push(deletePeriod.type);
            //delete/update
            arrayArgs.push("DELETE");
            arrayArgs.push("TH");
            arrayArgs.push("");
            var gprsCmd = new GprsCmdObj(CONSTANTS.get("CMD_TRANSFER_PERIODIC_CANC_TRANS"), "", "", gUserInfo.lang, gUserInfo.sessionID, arrayArgs);
            var  data = getDataFromGprsCmd(gprsCmd);
            requestMBService(data, true, 0, requestMBPeriodDeleteSuccess, requestMBPeriodServiceDeleteFail);

        }
    }
}

function alertConfirmPeriodCancel() {
    if (currentPage == "transfer/transfer-card-create-scr") {
        document.removeEventListener("alertConfirmCancel", alertConfirmPeriodCancel, false);
        document.removeEventListener("alertConfirmOK", alertConfirmPeriodOK, false);
    }
}

function requestMBPeriodDeleteSuccess(){


}

function requestMBPeriodServiceDeleteFail(){

}

function styleHistoryList(){

    if (currentPage == "transfer/transfer-card-create-scr") {

        var styleDiv3n = document.querySelectorAll(".p-list-field-1");
        var styleDiv4n = document.querySelectorAll(".p-list-field-2");
        if (styleDiv3n.length >0)
        {
            for(var i= 0; i < styleDiv4n.length;i++)
            {
                styleDiv3n[i].style.float = "none";
                styleDiv3n[i].style.textAlign ="right";
                styleDiv3n[i].style.maxWidth = "inherit";

                styleDiv4n[i].style.maxWidth = "inherit";
            }
        }
    }
}
function viewCardBank(e,index){    
    if(e.style.display == 'none'){
        document.getElementById('template-contact').style.display = 'none';
        resultListNull("divListContact");
        return
    }       
    document.getElementById('accNameContact').innerHTML = tempRespArr[index].peopleName;
    document.getElementById('accCard').style.display = '';
    document.getElementById('accNumberContact').innerHTML =  tempRespArr[index].transValue;
    document.getElementById('deleteSelection').style.display = '';
    resetActive();
    e.style.backgroundColor = '#FF8C29';
    e.style.color = '#fff';
    tempIndex = index;
}
function resetActive(){
    if(tempRespArr != undefined){
        for(var i = 0; i< tempRespArr.length; i++){
            if(document.getElementById('cardAcc_' + i)){
                if(i%2 == 0){
                    document.getElementById('cardAcc_' + i).style.backgroundColor = '#F7E9FA';
                }else{
                    document.getElementById('cardAcc_' + i).style.backgroundColor = '#FDF1FF';
                }
                document.getElementById('cardAcc_' + i).style.color = '#000';
            }
        }
    }
}
function genScreenDesktop(respArr){
    tempRespArr = respArr;
    for(var i = respArr.length; i > 0 ; i--){
        for(var j = 0; j < i - 1; j++){
            var tempValue;
            if(respArr[j].peopleName.toUpperCase().charCodeAt(0) > respArr[j + 1].peopleName.toUpperCase().charCodeAt(0)){
                tempValue = respArr[j];
                respArr[j] = respArr[j + 1];
                respArr[j + 1] = tempValue;
            }
        }
    }
    var div = document.getElementById("divListContact");
    div.innerHTML = "";
    var firstLetter;
    for(var i = 0; i < respArr.length; i++){
        if(i == 0 ||respArr[i].peopleName.toUpperCase().charCodeAt(0) > firstLetter.charCodeAt(0)){
            firstLetter = respArr[i].peopleName.charAt(0).toUpperCase();
            var cardTitle = document.createElement('div');
            cardTitle.innerHTML = firstLetter;
            cardTitle.style.textAlign = "left";
            cardTitle.style.padding = "10px";
            cardTitle.style.color = "#5f2f85";
            cardTitle.style.fontWeight = "bold";
            div.appendChild(cardTitle);
        }
        var tempView = document.createElement('div');
        tempView.setAttribute('class','my-acc-view')
        tempView.setAttribute('id','cardAcc_' + i);
        tempView.setAttribute('onclick',"viewCardBank(this," + i + ")");
        tempView.innerHTML = respArr[i].peopleName;
        div.appendChild(tempView);
        viewCardBank(document.getElementById("cardAcc_0"),0);
    }
}
function genScreenOther(idDivList, respArr){
    genScreenDesktop(respArr);
}
function genScrDesktopRecent(respArr){
    if(respArr.length > 0){
        var recentList = new Array();
        var recentTemp;
        var recentObjTemp;
        for(var i = 0; i < respArr.length;i++){
            recentTemp = respArr[i].split("#");
            recentObjTemp = new RecentObj();
            recentObjTemp.partnerName = recentTemp[5];
            recentObjTemp.partnerNumber = recentTemp[4];
            recentObjTemp.transToBank = recentTemp[6];
            recentObjTemp.transValue = recentTemp[2];
            recentObjTemp.transContent = recentTemp[3];
            recentObjTemp.transTime = recentTemp[1];
            recentObjTemp.idNo = recentTemp[0];
            recentList.push(recentObjTemp);
        }
        tempRespArr = recentList;
        for(var i = recentList.length; i > 0 ; i--){
            for(var j = 0; j < i - 1; j++){
                var tempValue;
                if(recentList[j].partnerNumber.toUpperCase().charCodeAt(0) > recentList[j + 1].partnerNumber.toUpperCase().charCodeAt(0)){
                    tempValue = recentList[j];
                    recentList[j] = recentList[j + 1];
                    recentList[j + 1] = tempValue;
                }
            }
        }
        var div = document.getElementById("divListGroup1");
        div.innerHTML = "";
        var firstLetter;
        for(var i = 0; i < recentList.length; i++){
            if(i == 0 ||recentList[i].partnerName.toUpperCase().charCodeAt(0) > firstLetter.charCodeAt(0)){
                firstLetter = recentList[i].partnerName.charAt(0).toUpperCase();
                var localTitle = document.createElement('div');
                localTitle.innerHTML = firstLetter;
                localTitle.style.textAlign = "left";
                localTitle.style.padding = "10px";
                localTitle.style.color = "#5f2f85";
                localTitle.style.fontWeight = "bold";
                div.appendChild(localTitle);
            }
            var tempView = document.createElement('div');
            tempView.setAttribute('class','my-acc-view');
            tempView.setAttribute('id','recentAcc_' + i);
            tempView.setAttribute('onclick',"viewRecent(this," + i + ")");
            tempView.innerHTML = recentList[i].partnerName;
            div.appendChild(tempView);
        }
        viewRecent(document.getElementById("recentAcc_0"),0);
    }
}
function viewRecent(e,index){
    document.getElementById('accNameContact').innerHTML =  tempRespArr[index].partnerName;
    document.getElementById('info_1').innerHTML =  CONST_STR.get('ACCOUNT_ACC_NO_TITLE');
    document.getElementById('info_2').innerHTML =  tempRespArr[index].partnerNumber;
    document.getElementById('info_3').innerHTML =  CONST_STR.get('TRANSFER_BANK');
    document.getElementById('info_4').innerHTML =  tempRespArr[index].transToBank
    document.getElementById('info_5').innerHTML =  CONST_STR.get('TRANS_BULK_AMOUNT');
    document.getElementById('info_6').innerHTML =  formatNumberToCurrency(tempRespArr[index].transValue);
    document.getElementById('info_7').innerHTML =  CONST_STR.get('TRANS_CONTENT');
    document.getElementById('info_8').innerHTML =  tempRespArr[index].transContent;
    document.getElementById('info_9').innerHTML =  CONST_STR.get('DAY_TRANSFER');
    document.getElementById('info_10').innerHTML =  tempRespArr[index].transTime;
    if(document.getElementById('saveRecent') != undefined){
    document.getElementById('saveRecent').setAttribute("onclick","saveRecent('" + tempRespArr[index].idNo + "')");
    }
    document.getElementById('transHis').setAttribute("onclick","transRecent('" + index + "')");
    document.getElementById('deleteRecent').setAttribute("onclick","deleteRecent('" + tempRespArr[index].idNo + "')");

    resetRecentActive();
    e.style.backgroundColor = '#FF8C29';
    e.style.color = '#fff';
}
function resetRecentActive(){
    if(tempRespArr != undefined){
        for(var i = 0; i< tempRespArr.length; i++){
            if(document.getElementById('recentAcc_' + i)){
                if(i%2 == 0){
                    document.getElementById('recentAcc_' + i).style.backgroundColor = '#F7E9FA';
                }else{
                    document.getElementById('recentAcc_' + i).style.backgroundColor = '#FDF1FF';
                }
                document.getElementById('recentAcc_' + i).style.color = '#000';
            }
        }
    }
}
function transLocalBank(){
    var objectVal = {};
    objectVal["transValue"] = document.getElementById('accNumberContact').innerText;
    callbackContactTranfer(objectVal);
}
function deleteSelection(){
    var transValue = document.getElementById('accNumberContact').innerText.trim();
    var peopleName = document.getElementById('accNameContact').innerText.trim();
    for(i = 0; i < tempRespArr.length; i++){
        var stransValue = tempRespArr[i].transValue.trim();
        var speopleName = tempRespArr[i].peopleName.trim();
        if(transValue == stransValue && peopleName == speopleName){
            showPopUpTranferContactDelete(tempRespArr[i]);
        }
    }
}
function closeDialogSwitchMode(){
    var modaFullClose = document.getElementById('myModalFullDialog');
    var modaFullSecondClose = document.getElementById('myModalFullDialog-second');
    if(modaFullClose){
        if(modaFullClose.style.display != 'none'){
            modaFullClose.style.display = "none";
            callbackCloseDialogSchedulerTransfer();
        }
    }
    if(modaFullSecondClose){
        if(modaFullSecondClose.style.display != 'none'){
            modaFullSecondClose.style.display = "none";
            callbackCloseDialogSchedulerTransfer();
        }
    }
}