/**
 * Created by HuyNT2
 * User: 
 * Date: 12/17/13
 * Time: 5:35 PM
 */

/*** HEADER ***/
var gprsResp = new GprsRespObj("","","","");
var countOTP = 0;
var timerOTP = 90; // OTP timeout = 90s
var OTPTimeout;
var tmpOTPkey ="";
var authenType = '';
var strXml = "";
var XmlLocal;
var countPUS = 0;
var timerPUS = 90;
var PUSTimeout;
//var countMTX = 0;
//var timerMTX = 90;
//var MTXTimeout;
/*** VIEW BACK FROM OTHER ***/

function viewBackFromOther() {
	logInfo('Back from other view');
    actionbar.showStepSequence("com-authentication-scr");
}

/*** VIEW BACK FROM OTHER ***/

/*** VIEW LOAD SUCCESS ***/
function viewDidLoadSuccess() {

    //handleOTPTimeout(); add test
    navController.getActionBar().hideActionbar();
    navController.getActionBar().showActionBar();
	logInfo('authen screen load success');
	//ngocdt3 
	var tmpXsl = getCachePageXsl('com-review-authentication');
	if(xml_review != ''){
		var tmpXml = getReviewXmlStore();
	}
	
	if(tmpXml){
		XmlLocal = tmpXml;
	if (strXml == '' || strXml == undefined){
		strXml = XMLToString(tmpXml);
	}

    //CONVERT TO NEW STRUCTURE
    var newDoc = convertToNewStructureXML(strXml);
    tmpXml = newDoc;
    XmlLocal = tmpXml;
    strXml = XMLToString(tmpXml);

	//tmpXml = parseXMLPagging();
	logInfo(tmpXml);
	//return tmpXml;
	var tmpHtmlStr = genHTMLStringWithXML(tmpXml, tmpXsl, function(oStr){
		var tmpNode = document.getElementById('reviewTransaction');
		if(tmpNode !=null) tmpNode.innerHTML = oStr;
        //console.log("SANGNT1 " +oStr);
	});	
	//get sequence form xsl
	var tmpXslDoc = getCachePageXsl("sequenceform");
	//create xml
	tmpRespReview = getRespObjStore();
	var tmpStepNo = getSequenceFormIdx(tmpStepNo);


    ((tmpStepNo == undefined) || (tmpStepNo > 400))? tmpStepNo = 403: tmpStepNo = 302;
    console.log("tmpStepNo");
    console.log(tmpStepNo);
    actionbar.addListSequence("com-authentication-scr");
    actionbar.showStepSequence("com-authentication-scr");

	var docXml = createXMLDoc();	
	var tmpXmlRootNode = createXMLNode('seqFrom', '', docXml);
	var tmpXmlNodeInfo = createXMLNode('stepNo', tmpStepNo, docXml, tmpXmlRootNode);
	//gen html string
	genHTMLStringWithXML(docXml, tmpXslDoc, function(oStr){
		var tmpNodeSeq = document.getElementById('seqFormAuthen');
		tmpNodeSeq.innerHTML = oStr;
		changeLanguageInView();
	}, function() {
		logInfo('gen authen screen fail');
		goBack();
	});
	}
	else if(!tmpXml || tmpXml == undefined){
		//get sequence form xsl
	var tmpXslDoc = getCachePageXsl("sequenceform");
	//create xml
	tmpRespReview = getRespObjStore();
	var tmpStepNo = getSequenceFormIdx(tmpStepNo);
	((tmpStepNo == undefined) || (tmpStepNo > 400))? tmpStepNo = 403: tmpStepNo = 302;
	var docXml = createXMLDoc();	
	var tmpXmlRootNode = createXMLNode('seqFrom', '', docXml);
	var tmpXmlNodeInfo = createXMLNode('stepNo', tmpStepNo, docXml, tmpXmlRootNode);
	//gen html string
	genHTMLStringWithXML(docXml, tmpXslDoc, function(oStr){
		var tmpNodeSeq = document.getElementById('seqFormReviewAuthen');
		tmpNodeSeq.innerHTML = oStr;
		changeLanguageInView();
	}, function() {
		logInfo('gen authen screen fail');
		goBack();
	});
		var nodeInfo = getReviewHtmlStore();
		var nodereview = document.getElementById('reviewTransaction');
		genDataReview(nodereview,nodeInfo);
	}
	var noteCheck = document.getElementById("setCheck");
	if(noteCheck!=undefined){
		noteCheck.style.display = "none";
	}
	//Get Token type
	authenType = gUserInfo.valicationType;
	//ngocdt3 bo sung cho MobileCA
	if(authenType =='MCA'){
		document.getElementById('id.ca00').style.display ='none';
		document.getElementById('id.ca02').style.display ='none';
		document.getElementById('auth.note').style.display ='none';
		document.getElementById('auth.note.support').style.display ='none';
		document.getElementById('auth.note.hard.token').style.display ='none';
		document.getElementById('auth.note.soft.token').style.display ='none';
		document.getElementById('auth.note.mca').style.display ='';
		
	}
	else if(authenType =='OTP'){
		document.getElementById('auth.note.hard.token').style.display ='none';
		document.getElementById('auth.note.soft.token').style.display ='none';
		document.getElementById('auth.note.mca').style.display ='none';
		
	}
	else if(authenType =='TOKEN'){
		document.getElementById('auth.note').style.display ='none';
		document.getElementById('auth.note.support').style.display ='none';
		document.getElementById('auth.note.hard.token').style.display ='';
		document.getElementById('auth.note.mca').style.display ='none';
		document.getElementById('auth.note.soft.token').style.display ='none';
		
	}
	else if(authenType =='MKS'){
		document.getElementById('auth.note').style.display ='none';
		document.getElementById('auth.note.support').style.display ='none';
		document.getElementById('auth.note.hard.token').style.display ='none';
		document.getElementById('auth.note.mca').style.display ='none';
		document.getElementById('auth.note.soft.token').style.display ='';
	}else if(authenType =='PUS'){
		document.getElementById('auth.note').style.display ='none';
		document.getElementById('auth.note.support').style.display ='none';
		document.getElementById('auth.note.hard.token').style.display ='none';
		document.getElementById('auth.note.mca').style.display ='none';
		document.getElementById('auth.note.soft.token').style.display ='none';
		document.getElementById('auth.note.soft.pus').style.display ='';
	}
    else if(authenType =='MTX'){
        document.getElementById('auth.note').style.display ='none';
        document.getElementById('auth.note.support').style.display ='none';
        document.getElementById('authen.tokentype').style.display = 'block';

    }
	
	//ngocdt3 end
	//Check over limit
	var tmpRespObj = getRespObjStore();
	if ((tmpRespObj.respCode == RESP.get('COM_OVER_LIMIT')) || (tmpRespObj.respCode == RESP.get('COM_OVER_DATE_LIMIT'))) {
		authenType = 'TOKEN';
		var tmpNodeBtn = document.getElementById('authen-send-request');
		
		var tmpNodeBtnContainer = document.getElementById('btn-authenrequest');
		tmpNodeBtnContainer.innerHTML = '<input id="authen-send-request" style="width:70%;" type="button" class="btnshadow btn-second" name="vr" onclick="sendJSONRequestVerifyFirstStep();" value="' + CONST_STR.get('REVIEW_BTN_CONFIRM') + '" />';
	}
	//if (gUserInfo.valicationType == 'TOKEN') { //for testing
	if (authenType == 'OTP') {
		var nodeTokenType = document.getElementById('authen.tokentype');
		//nodeTokenType.innerHTML = 'OTP CODE';/cu
		nodeTokenType.innerHTML =CONST_STR.get("AUTHEN_LABEL_OTP"); 
		var nodeProgressWrapper = document.getElementById('authen.progressbar');
		nodeProgressWrapper.style.display = 'block';
		//do not show resend OTP button
		var nodeResendOTP = document.getElementById('authen.resendotp');
		//nodeResendOTP.style.display = '';
		sendJSONRequestOTP();
	}else if(authenType == 'PUS'){
        if(tmpRespObj.responseType == CONSTANTS.get('CMD_TYPE_CHANGE_AUTHEN_TYPE_PUSH')){
            document.getElementById('auth.note').style.display ='';
            document.getElementById('auth.note.support').style.display ='none';
            document.getElementById('auth.note.hard.token').style.display ='none';
            document.getElementById('auth.note.mca').style.display ='none';
            document.getElementById('auth.note.soft.token').style.display ='none';
            document.getElementById('auth.note.soft.pus').style.display ='none';
            var nodeTokenType = document.getElementById('authen.tokentype');
            nodeTokenType.innerHTML =CONST_STR.get("AUTHEN_LABEL_OTP");
            var nodeProgressWrapper = document.getElementById('authen.progressbar');
            nodeProgressWrapper.style.display = 'block';
            var nodeResendOTP = document.getElementById('authen.resendotp');

            sendJSONRequestOTP();
        }else{
            var nodeTokenType = document.getElementById('authen.tokentype');
            //nodeTokenType.innerHTML = 'MATRIX KEY';//cu
            nodeTokenType.innerHTML = CONST_STR.get("AUTHEN_TYPE_NOTE_PUSH");
            var nodeProgressWrapper = document.getElementById('authen.progressbar');
            nodeProgressWrapper.style.display = 'block';
            sendJSONRquestPush();
        }

	}else{
		var data = {};
		arrayArgsSMS = new Array();
		var tmpGprsCmd = getGprsCmdStore();
		arrayArgsSMS.push(tmpGprsCmd.arguments[1]); //transaction ID
		requestBacgroundMBService('CMD_TYPE_OTP_REQUEST', arrayArgsSMS,requestMBServiceSMSSuccesss, requestMBServiceSMSFail);
		if (authenType == 'MTX') {
		var nodeTokenType = document.getElementById('authen.tokentype');
		//nodeTokenType.innerHTML = 'MATRIX KEY';//cu
		nodeTokenType.innerHTML = CONST_STR.get("AUTHEN_LABEL_MATRIX"); 
		sendJSONRquestMatrix();
		}
		else if(authenType =='MCA'){
		sendJSONRequestMobileCA();
		}
	//ngocdt3 end
		else {
		var nodeTokenType = document.getElementById('authen.tokentype');
		nodeTokenType.innerHTML = CONST_STR.get("AUTHEN_LABEL_TOKEN"); 
		}
		
	}
	//ngocdt3 bo sung cho mobile CA
	
	
	
	
	var nodeAuthenTitle = document.getElementById('auth.title');
	nodeAuthenTitle.innerHTML = CONST_STR.get('AUTHEN_TXT_INPUT_KEY_TITLE');
	
	var nodeInputToken = document.getElementById('authen.tokenkey');
	setInputOnlyNumber('authen.tokenkey', CONST_STR.get("ERR_INPUT_ONLY_NUMBER"));
	nodeInputToken.addEventListener('evtSpecialKeyPressed', handleSpecialKeyPressd, false);
    clickOnDiv('input-trigger');
	
	// if(devicePlatform == 'Android' && versionSDK != 'undefined' ){
	// cordova.exec(function(e){
    //                 console.log('Showkeyboard' + e );
                   
    //             }, function(e){
    //                 console.log('Loi show keyboard' + e );
                   
    //             }, 'Keyboard', 'show', ['show']);
	// }
	//nodeInputToken.focus();
	
	
}
function requestMBServiceSMSSuccesss(e){
}
function requestMBServiceSMSFail(e){
}
function convertToNewStructureXML(strXml) {
    var parser = new DOMParser();
    xmlDoc = parser.parseFromString(strXml,"text/xml");

    // create new documnet
    var newDoc = createXMLDoc();
    var tmpXmlRootNode = createXMLNode('review', '', newDoc);
    //review/reviewtitle //screen title
    //var tmpXmlReviewTitle = createXMLNode('reviewtitle', xmlDoc.getElementsByTagName("reviewtitle")[0].firstChild.nodeValue, newDoc, tmpXmlRootNode);
    var tagReviewTitle = xmlDoc.getElementsByTagName("reviewtitle");

    var tmpXmlReviewTitle = null;
    if(tagReviewTitle != null && tagReviewTitle[0] != undefined)
    {
        if (tagReviewTitle[0].firstChild != null)
        {
            tmpXmlReviewTitle = createXMLNode('reviewtitle', tagReviewTitle[0].firstChild.nodeValue,
                newDoc, tmpXmlRootNode);
        }
    }
    //review/reviewinfo/reviewtranstitle
    var tagReviewInfoXml = xmlDoc.getElementsByTagName("reviewinfo");
    var tagTs = '';
    for (i=0; i< tagReviewInfoXml.length;i++) {
        tagTs = tagReviewInfoXml[i].getElementsByTagName("transinfo");
        tagReviewTranTitle = tagReviewInfoXml[i].getElementsByTagName("reviewtranstitle");

        var tmpXmlReviewInfo = createXMLNode('reviewinfo', '', newDoc, tmpXmlRootNode);
       // var tmpXmlNodeTransTitle = createXMLNode('reviewtranstitle', tagReviewTranTitle[0].firstChild.nodeValue, newDoc, tmpXmlReviewInfo);

        data = new Array();
	if(i==1&& trans_type=="transfer" && checkTransferPage()){
		for (j=0; j< tagTs.length;j++) {
            try{
                var title = tagTs[j].getElementsByTagName('transinfotitle')[0].firstChild.nodeValue;
                var content = tagTs[j].getElementsByTagName('transinfocontent')[0].firstChild.nodeValue;
                var row = [title,content];
                data.push(row);
            }catch(e){
            }
        }
	}
	else{
		for (j=0; j< tagTs.length;j++) {
            try{
                var title = tagTs[j].getElementsByTagName('transinfotitle')[0].firstChild.nodeValue;
                var content = tagTs[j].getElementsByTagName('transinfocontent')[0].firstChild.nodeValue;
                var row = [title, content];
                data.push(row);
            }catch(e){
            }
        }
	}
        

        //gen listview
        if(i==1&& trans_type=="transfer" && checkTransferPage()){
				var recycler = new RecyclerView({
				type: "TITLE",
				typeTextAlign: "MIDLE",
				title: "Chuyển tới",
				titleAlign:"LEFT",
				opacity:false
			});
			recycler.setData(data);
		}
		else{
			//gen listview
			var recycler = new RecyclerView({
				type: "NORMAL",
				typeTextAlign: "MIDLE",
				title: "Tai khoan jumbo",
				titleAlign:"LEFT",
				opacity:false
			});
			recycler.setData(data);
		}
        var contentHTML = recycler.init();

        var reviewTb = xmlDoc.getElementsByTagName("reviewtable")[0];
        var contentTableHTML = '';
        if(reviewTb != undefined && reviewTb != null && (i+ 1) >= tagReviewInfoXml.length){
	        var dataTable =  new Array();
	        var dataTableTitle =  new Array();
	        
	        var a = reviewTb.getElementsByTagName('reviewtabletitle')[0];
	        for(var k = 1; k <= a.childElementCount; k++){
	        	dataTableTitle.push(a.getElementsByTagName('tbcol' + k)[0].firstChild.nodeValue);
	        }
	        dataTable.push(dataTableTitle);
	        var rowDetail = reviewTb.getElementsByTagName('reviewtabledetail');
	        for(var k = 0; k < rowDetail.length;k++){
	        	var dataTableContent =  new Array();
	        	for(var m = 1;m <= (rowDetail[k].childElementCount/2);m++){
	        		dataTableContent.push(rowDetail[k].getElementsByTagName('tbcontent'+m)[0].firstChild.nodeValue);
	        	}
	        	dataTable.push(dataTableContent);
	        }


	        var recycler = new RecyclerView({
	            type: "DESKTOP_NORMAL",
	            typeTextAlign: "MIDLE",
	            opacity:false
	        });
	        recycler.setData(dataTable);
	        recycler.setHeaderHightlight(true);
	        contentTableHTML = '<br>' + recycler.init();	      
        }
        contentHTML = contentHTML + contentTableHTML;
        var tmpContent = createXMLNode('content', contentHTML, newDoc, tmpXmlReviewInfo);

    }
    //console.log(data);

    //tmpXml = parseXMLPagging();
    logInfo(newDoc);
    return newDoc;
}

function genDataReview(inNode, inStr){
	var tmpConfigResult = CONFIG_RESULT_FUNC_GOHOME[navArrayScr[0]];
	var tmpBtnTitle = 'RESULT_GO_HOMEPAGE_BTN';
	var tmpBtnToScr = 'goToDefaultPage();';
	if(inStr!=undefined){
		inNode.innerHTML = inStr;
	}
	var tmpNodeCancelBtn = document.getElementById('trCancel');
	if(tmpNodeCancelBtn != undefined && tmpNodeCancelBtn != null) {
		tmpNodeCancelBtn.style.display = 'none';
	}

	var tmpNodeBackBtn = document.getElementById('trgoBack');
	if(tmpNodeBackBtn != undefined && tmpNodeBackBtn != null) {
		tmpNodeBackBtn.style.display = 'none';
	}
	var tmpNodeNextBtn = document.getElementById('trNext');
	if(tmpNodeNextBtn != undefined && tmpNodeNextBtn != null) {
		tmpNodeNextBtn.style.display = 'none';
	}
	var tmpNodeCondition = document.getElementById('trCondition');
	if(tmpNodeCondition != undefined && tmpNodeCondition != null) {
	tmpNodeCondition.style.display = 'none';
	}
	
	var tmpNodeCancelBtn = document.getElementById('goEsavingOpenLnk');
	if(tmpNodeCancelBtn != undefined && tmpNodeCancelBtn != null) {
		tmpNodeCancelBtn.style.display = 'none';
		tmpNodeCancelBtn.parentNode.style.display = 'none';
	}
	
}
function doOtherTransaction() {
	statusOtherFunc = true;
	navController.resetBranchView();
	//navController.popToRootView(true);
}

function goToDefaultPage(inPage, inPageType) {
	//navController.initWithRootView('account/account-scr', true);	
	if(!inPage) {
		var tmpPageName = navController.getDefaultPage();
		var tmpPageType = navController.getDefaultPageType();
		navController.initWithRootView(tmpPageName, true, tmpPageType);
	}
	else {
		navController.initWithRootView(inPage, true, inPageType);
	}
}
/*** VIEW LOAD SUCCESS END ***/

/*** VIEW WILL UNLOAD ***/

function viewWillUnload() {
	logInfo('authen screen will unload');
	clearOTPTimeout();
    clearPUSTimeout();
}

/*** VIEW WILL UNLOAD END ***/

/*** FUNCTIONS ***/


function handleSpecialKeyPressd(e)
{
	//nodeInputToken.removeEventListener('evtSpecialKeyPressed', handleSpecialKeyPressd, false);
	var ew = e.keyPress;
	if (ew == 13) { //Enter pressed
		//sendJSONAuthenRequest();
		var tmpNodeBtn = document.getElementById('authen-send-request');
		var tmpStr = tmpNodeBtn.getAttributeNode('name').value;
		if( tmpStr == 'vr') {
			sendJSONRequestVerifyFirstStep();
		}
		else {
			sendJSONAuthenRequest();
		}
	}
	else {
		return;
	}
}

//MATRIX CARD
function sendJSONRquestMatrix() {
	var data = {};
	var arrayArgs = new Array();
	
	var tmpGprsCmd = getGprsCmdStore();
	
	arrayArgs.push(''); //transaction ID
	
	data["cmdType"] = CONSTANTS.get('CMD_TYPE_MATRIX_REQUEST');//gGprsCmd.cmdType;
	data["time"] = tmpGprsCmd.timeCur;
	data["app"] = tmpGprsCmd.appName;
	data["version"] = tmpGprsCmd.version;
	data["language"] = tmpGprsCmd.language;
	data["session"] = tmpGprsCmd.sessionID;
	data["args"] = arrayArgs;
	
	setGprsCmdStore(tmpGprsCmd);
	//data = getDataFromGprsCmd(gGprsCmd);

    /*countMTX++;
    if (countMTX <= 5) {




        startProgressBar('authen.progressbarotp', timerMTX);
        MTXTimeout = setTimeout(function doAfterProgress() {
            handleOTPTimeout();
        }, timerMTX*1000);

        //requestMBService(data, false); //send request OTP
        requestBacgroundMBService('CMD_TYPE_OTP_REQUEST', arrayArgs);
    }
    else {
        document.addEventListener("closeAlertView", handleOTPGetOver, false);
        clearOTPTimeout();
        showAlertText(CONST_STR.get('MSG_OTP_LIMIT_GET_TIME'));
    }*/
	requestMBService(data, true, 0, function(e) {
		//success
		var tmpGprsResp = parserJSON(e, false);
		if(tmpGprsResp.arguments && tmpGprsResp.arguments.length > 0) {
			document.getElementById('authen.tokentype').innerHTML = tmpGprsResp.arguments[0];
		}
	}, function() {
        //fail

	}); //send request OTP
}

//SMS
function sendJSONRequestOTP() {
	var data = {};
	var arrayArgs = new Array();
	
	var tmpGprsCmd = getGprsCmdStore();
	//mailservice =tmpGprsCmd.arguments[0];
	//mailtransid =tmpGprsCmd.arguments[1];
	
	
	arrayArgs.push(tmpGprsCmd.arguments[1]); //transaction ID
	
	data["cmdType"] = CONSTANTS.get('CMD_TYPE_OTP_REQUEST');;//gGprsCmd.cmdType;
	data["time"] = tmpGprsCmd.timeCur;
	data["app"] = tmpGprsCmd.appName;
	data["version"] = tmpGprsCmd.version;
	data["language"] = tmpGprsCmd.language;
	data["session"] = tmpGprsCmd.sessionID;
	data["args"] = arrayArgs;
	
	setGprsCmdStore(tmpGprsCmd);
	//data = getDataFromGprsCmd(gGprsCmd);
	
	//Service request OTP do not need message response
	//set timeout request OTP
	countOTP++;
	if (countOTP <= 5) {
		
		
		
		
		startProgressBar('authen.progressbarotp', timerOTP);
		OTPTimeout = setTimeout(function doAfterProgress() {
			handleOTPTimeout();
		}, timerOTP*1000);
		
		//requestMBService(data, false); //send request OTP
		requestBacgroundMBService('CMD_TYPE_OTP_REQUEST', arrayArgs);
	}
	else {
		document.addEventListener("closeAlertView", handleOTPGetOver, false);
		clearOTPTimeout();
		showAlertText(CONST_STR.get('MSG_OTP_LIMIT_GET_TIME'));
	}
}

//handle OTP time-out
function handleOTPTimeout() {
	document.addEventListener("alertConfirmOK", handleOTPResendAlert, false);
	document.addEventListener("alertConfirmCancel", handleOTPResendAlertCancel, false);
	clearOTPTimeout();
    //showAlertConfirmText(CONST_STR.get('MSG_OTP_TIME_PERIOD'));
    showAlertConfirmText(CONST_STR.get('MSG_OTP_TIME_PERIOD'),CONST_STR.get('ALERT_BTN_OK_TITLE'),CONST_STR.get('ALERT_BTN_CANCEL_TITLE'));
}

function handleOTPResendAlert(e) {
	if(currentPage == "com-authentication-scr") {
		document.removeEventListener("alertConfirmOK", handleOTPResendAlert, false);
		document.removeEventListener("alertConfirmCancel", handleOTPResendAlertCancel, false);
		clearOTPTimeout();
		sendJSONRequestOTP();
	}
}

function handleOTPResendAlertCancel(e) {
	if(currentPage == "com-authentication-scr") {
		document.removeEventListener("alertConfirmOK", handleOTPResendAlert, false);
		document.removeEventListener("alertConfirmCancel", handleOTPResendAlertCancel, false);
		clearOTPTimeout();
		goToMainScreen();
	}
}

//handle OTP over 5 times
function handleOTPGetOver() {
	if(currentPage == "com-authentication-scr") {
		document.removeEventListener("closeAlertView", handleOTPGetOver, false);
		goToMainScreen();
	}
}

//send step 1
var click = false;
function sendJSONRequestVerifyFirstStep() {
    var nodeTokenKey = document.getElementById("authen.tokenkey");
    // collect the form data while iterating over the inputs
    var data = {};
    var arrayArgs = new Array();

    var tmpTokenStr = nodeTokenKey.value;
    if(tmpTokenStr.length != 6) {
        showAlertText(CONST_STR.get('ERR_INPUT_TOKEN_EMPTY'));
        return;
    }
    var tmpGprsCmd = getGprsCmdStore();
    arrayArgs.push(nodeTokenKey.value); //token key
    if(tmpGprsCmd.arguments != undefined && tmpGprsCmd.arguments.length > 0) arrayArgs.push(tmpGprsCmd.arguments[1]); //transaction id

    data["cmdType"] = CONSTANTS.get('CMD_AUTHEN_LIMIT');//gGprsCmd.cmdType;
    data["time"] = tmpGprsCmd.timeCur;
    data["app"] = tmpGprsCmd.appName;
    data["version"] = tmpGprsCmd.version;
    data["language"] = tmpGprsCmd.language;
    data["session"] = tmpGprsCmd.sessionID;
    data["args"] = arrayArgs;

    setGprsCmdStore(tmpGprsCmd);
    //data = getDataFromGprsCmd(gGprsCmd);

    //document.addEventListener("evtHttpSuccess", requestMBAuthenServiceSuccess, false);
    //document.addEventListener("evtHttpFail", requestMBAuthenServiceFail, false);

    requestMBService(data, true, 0, requestMBAuthenServiceSuccess, requestMBAuthenServiceFail);

    nodeTokenKey.value = '';
}

//send confirm message

function sendJSONAuthenRequest() {

    var nodeTokenKey = document.getElementById("authen.tokenkey");
    // collect the form data while iterating over the inputs
    var data = {};
    var arrayArgs = new Array();

    var tmpTokenStr = nodeTokenKey.value;
    if(tmpTokenStr.length != 6) {
        showAlertText(CONST_STR.get('ERR_INPUT_TOKEN_EMPTY'));
        return;
    }

    var tmpGprsCmd = getGprsCmdStore();

    /*arrayArgs.push(tmpGprsCmd.arguments[0]); //confirm type
     arrayArgs.push(tmpGprsCmd.arguments[1]); //transaction ID
     tmpGprsCmd.arguments[2] = nodeTokenKey.value; //Token key --> actual
     arrayArgs.push(nodeTokenKey.value);
     arrayArgs.push(tmpGprsCmd.arguments[3]); //user's authen type
     arrayArgs.push(tmpGprsCmd.arguments[4]); //1: accept, 0: decline --> khong dung nua
     */
    tmpGprsCmd.arguments[2] = nodeTokenKey.value; //Token key --> actual
    arrayArgs = tmpGprsCmd.arguments;
    if(arrayArgs[0]=="293" && arrayArgs[3] =="PUS"){
        arrayArgs[3] ="OTP";
    }
    data["cmdType"] = CONSTANTS.get('CMD_TYPE_TICKET_REQUEST');//gGprsCmd.cmdType;
    data["time"] = tmpGprsCmd.timeCur;
    data["app"] = tmpGprsCmd.appName;
    data["version"] = tmpGprsCmd.version;
    data["language"] = tmpGprsCmd.language;
    data["session"] = tmpGprsCmd.sessionID;
    data["args"] = arrayArgs;

    setGprsCmdStore(tmpGprsCmd);
    //data = getDataFromGprsCmd(gGprsCmd);

    requestMBService(data, true, 0, requestMBAuthenServiceSuccess, requestMBAuthenServiceFail);

    //clear OTP
    clearOTPTimeout();
	clearPUSTimeout();
    nodeTokenKey.value = '';

}

function clearOTPTimeout() {
	clearTimeout(OTPTimeout);
	OTPTimeout = null;
	stopProgressBar('authen.progressbarotp'); //stop progress bar
}

function resendOTP() {
	clearOTPTimeout();
	sendJSONRequestOTP();
}

function goBack() {
	//TuanNM5 + HuytNT2 update
	
	//navController.resetBranchView();
	var data = {};
	var arrayArgs = new Array();
	
	var tmpGprsCmd = getGprsCmdStore();
	
	arrayArgs.push(tmpGprsCmd.arguments[1]); //transaction ID
	
	data["cmdType"] = CONSTANTS.get('CMD_TRANSACTION_CANCEL');
	data["time"] = tmpGprsCmd.timeCur;
	data["app"] = tmpGprsCmd.appName;
	data["version"] = tmpGprsCmd.version;
	data["language"] = tmpGprsCmd.language;
	data["session"] = tmpGprsCmd.sessionID;
	data["args"] = arrayArgs;
	setGprsCmdStore(tmpGprsCmd);
	var url = "";
	
	requestBacgroundMBService('CMD_TRANSACTION_CANCEL', arrayArgs, function(e) {
		//success
		var tmpGprsResp = parserJSON(e, false);
		logInfo('Huy giao dich thanh cong: ' + tmpGprsResp.respCode);
		url = tmpGprsResp.arguments[1];
		if (url == '' || url == null) {
			//navController.resetBranchView();
			goToMainScreen();
		} else {
			window.location = url;
		}
	}, function() {
		logInfo('Huy giao dich bi loi');
	});
	//end update
	//clearOTPTimeout();
	/*var pages = [
                 "com-review-xsl-scr",
                 "com-review-scr"];
	navController.removePageInCache(pages);	
	withdraw_account = "";
	navController.popViewInit();*/
	
}

function goToMainScreen() {
	//clearOTPTimeout();
	////navController.popToRootView(true);
	//var pages = [
    //             "com-review-xsl-scr",
    //             "com-review-scr",
	//			 "esaving/future-esaving-close",
	//			 "esaving/future-esaving-prd-changeinfo",
	//			 "loan/loan-adjust-term-confirm-scr",
	//			 "loan/loan-active-authen-overdraft",
	//			 "loan-open-term-confirm"];
	//navController.removePageInCache(pages);	
	//navController.popViewInit();

	navController.resetAll();
	gotoHomePage();
}

//event listener: http request success
function requestMBAuthenServiceSuccess(e){
    click = false;
	gprsResp = parserJSON(e, false);
    if (gprsResp.respCode == '0' &&  gprsResp.arguments == 'REGISTER_MKS'){
        navController.pushToView('setting/setting-auth-type-mk-finish', true, 'html');
        return;
    }
    if (gprsResp.respCode == '0' &&  gprsResp.arguments == 'ACTIVE_MKS'){
        navController.pushToView('setting/setting-auth-type-active-finish', true, 'html');
        return;
    }
    if (gprsResp.arguments!=undefined && gprsResp.arguments.length > 0 && gprsResp.arguments[0] == 'UNREG_PUSH' && gprsResp.respCode == '0' ) {
        console.log("gprsResp.arguments " + gprsResp.arguments.length + gprsResp.arguments[1]);
        if(gprsResp.arguments.length>1 && gprsResp.arguments[1] !=undefined){
            gUserInfo.valicationType = gprsResp.arguments[1];
        }
    }
        //BYPASS
	//gprsResp.respCode = '0';
	//BYPASS
	if (gprsResp.respCode == '0' && gprsResp.responseType == CONSTANTS.get('CMD_TYPE_TICKET_REQUEST')) {
		stopProgressBar('authen.progressbarotp'); //stop progress bar

		//gRespObj = gprsResp;
		setRespObjStore(gprsResp);
		
		//document.addEventListener("closeAlertView", handleCloseAlertSuccess, false);
		//showAlertText(gprsResp.respContent);
		navController.pushToView("com-review-result-scr", true);
		
		//Query account change 
		queryInfoOfAccountNo(gUsingAccountNo);

	    // Redirect url
		if (getURLParam('payment') == 'pocket') {
		    var transid = getURLParam('transid');
		    var balance = parseFloat(getURLParam('balance')) + parseFloat(getURLParam('amount'));
		    window.open('https://demo.tpb.vn/retail/qpay/page-success.html?transid=' + transid + '&balance=' + balance, '_self');
		}
	}
	else if (gprsResp.respCode != '0' && gprsResp.responseType == CONSTANTS.get('CMD_AUTHEN_LIMIT')) { //authen 2-step fail
		showAlertText(gprsResp.respContent);
	}
	else if (gprsResp.respCode == '0' && gprsResp.responseType == CONSTANTS.get('CMD_AUTHEN_LIMIT')) { //authen 2-step success
		/*HaiNM*/
		showAlertText(gprsResp.respContent,document.getElementById('input-trigger'));
		removeotp();
		clickOnDiv('input-trigger');
		/*End*/
		var tmpNodeBtn = document.getElementById('authen-send-request');
		//if(tmpNodeBtn != undefined) tmpNodeBtn.setAttribute('onclick', 'sendJSONAuthenRequest();');
		var tmpNodeBtnContainer = document.getElementById('btn-authenrequest');
		tmpNodeBtnContainer.innerHTML = '<input id="authen-send-request" style="width:70%;" type="button" class="btnshadow btn-second" name="cf" onclick="sendJSONAuthenRequest();" value="' + CONST_STR.get('CARD_LOCK_BTN_TITLE') + '" />';
		authenType = 'OTP';
		var nodeTokenType = document.getElementById('authen.tokentype');
		nodeTokenType.innerHTML = 'OTP CODE';
		var nodeProgressWrapper = document.getElementById('authen.progressbar');
		nodeProgressWrapper.style.display = 'block';
		var nodeResendOTP = document.getElementById('authen.resendotp');
		//do not show resend OTP button
		//nodeResendOTP.style.display = '';
		sendJSONRequestOTP();
	}
	//handle other error code
	else if (gprsResp.respCode == RESP.get('COM_TRANS_EXT_TIMEOUT') && gprsResp.responseType == CONSTANTS.get('CMD_TYPE_TICKET_REQUEST')) { //go to home page
		showAlertText(gprsResp.respContent);
		var tmpPageName = navController.getDefaultPage();
		var tmpPageType = navController.getDefaultPageType();
		navController.initWithRootView(tmpPageName, true, tmpPageType);
	}
	else if (gprsResp.respCode != RESP.get('COM_WRONG_INPUT_TOKEN') && gprsResp.responseType == CONSTANTS.get('CMD_TYPE_TICKET_REQUEST')) { //ask to change view
		/*document.addEventListener("alertConfirmOK", handleRequestConfirmAlertOK, false);
		document.addEventListener("alertConfirmCancel", handleRequestConfirmAlertCancel, false);
		showAlertConfirmText(gprsResp.respContent + CONST_STR.get('ERR_COM_ASK_TO_EXECUTE_AGAIN'));*/
		document.addEventListener("closeAlertView", handleRequestAlertAuthenOKBtn, false);
		showAlertText(gprsResp.respContent);
	}
	else {
		showAlertText(gprsResp.respContent);
		var tmpNodeToken = document.getElementById('authen.tokenkey');
		if((tmpNodeToken != undefined) && (tmpNodeToken != null)) {
			tmpNodeToken.value = '';
		}
		
	}
	
};

/*function handleRequestConfirmAlertOK() {
	document.removeEventListener("alertConfirmOK", handleRequestConfirmAlertOK, false);
	document.removeEventListener("alertConfirmCancel", handleRequestConfirmAlertCancel, false);
	navController.resetBranchView();
}

function handleRequestConfirmAlertCancel() {
	document.removeEventListener("alertConfirmOK", handleRequestConfirmAlertOK, false);
	document.removeEventListener("alertConfirmCancel", handleRequestConfirmAlertCancel, false);
	var tmpPageName = navController.getDefaultPage();
	var tmpPageType = navController.getDefaultPageType();
	navController.initWithRootView(tmpPageName, true, tmpPageType);
	navController.resetCacheBranch();
}*/

function handleRequestAlertAuthenOKBtn() {
	document.removeEventListener("closeAlertView", handleRequestAlertAuthenOKBtn, false);
	navController.resetBranchView();
}

//event listener: http request fail
function requestMBAuthenServiceFail(){
    //stay here
    // Redirect url
//    click = false;
    if (getURLParam('payment') == 'pocket') {
        gprsResp = parserJSON(e, false);
        var transid = getURLParam('transid');
        window.open('https://demo.tpb.vn/retail/qpay/page-failed.html?transid=' + transid + '&respCode=' + gprsResp.respCode + '&respContent=' + gprsResp.respContent, '_self');
    }
};


//event listener: close alert view
function handleCloseAlertSuccess(e) {
	if ((e.type == "closeAlertView") && (currentPage == "com-authentication-scr")) {
		document.removeEventListener("closeAlertView", handleCloseAlertSuccess, false);
		gDestinationAcc = ''; //reset destination account to null
		//navController.popToRootView(true);
		clearOTPTimeout();
		navController.resetBranchView(true);
		//alert("transaction finished!");
	}
};
function goBackReview() {
	navController.popToRootView(true);
}
//ngocdt bo sung cho MobileCA
function sendJSONRequestMobileCA(){
       var data = {};
       var arrayArgs = new Array();
       var tmpGprsCmd = getGprsCmdStore();
       tmpGprsCmd.arguments[2] = "123456"; //Token key --> actual
       arrayArgs = tmpGprsCmd.arguments;
       
       data["cmdType"] = CONSTANTS.get('CMD_TYPE_TICKET_REQUEST');//gGprsCmd.cmdType;
       data["time"] = tmpGprsCmd.timeCur;
       data["app"] = tmpGprsCmd.appName;
       data["version"] = tmpGprsCmd.version;
       data["language"] = tmpGprsCmd.language;
       data["session"] = tmpGprsCmd.sessionID;
       data["args"] = arrayArgs;
       setGprsCmdStore(tmpGprsCmd);
       requestMBService(data, true, 0, requestMBAuthenServiceCASuccess, requestMBAuthenServiceCAFail);  
       //clear OTP
       clearOTPTimeout();
}
function requestMBAuthenServiceCASuccess(e){
       gprsResp = parserJSON(e, false);
       if (gprsResp.respCode == '0' && gprsResp.responseType == CONSTANTS.get('CMD_TYPE_TICKET_REQUEST')) {
              stopProgressBar('authen.progressbarotp'); //stop progress bar
              setRespObjStore(gprsResp);
              navController.pushToView("com-review-result-scr", true);
              
              //Query account change 
              queryInfoOfAccountNo(gUsingAccountNo);
       }
       else if (gprsResp.respCode != '0' && gprsResp.responseType == CONSTANTS.get('CMD_AUTHEN_LIMIT')) { //authen 2-step fail
              showAlertText(gprsResp.respContent);
       }
       else if (gprsResp.respCode == '0' && gprsResp.responseType == CONSTANTS.get('CMD_AUTHEN_LIMIT')) { //authen 2-step success
              showAlertText(gprsResp.respContent);
              var tmpNodeBtn = document.getElementById('authen-send-request');
              var tmpNodeBtnContainer = document.getElementById('btn-authenrequest');
              tmpNodeBtnContainer.innerHTML = '<input id="authen-send-request" type="button" class="btnshadow btn-second" name="cf" onclick="sendJSONAuthenRequest();" value="' + CONST_STR.get('REVIEW_BTN_CONFIRM') + '" />';
              authenType = 'OTP';
              var nodeTokenType = document.getElementById('authen.tokentype');
              nodeTokenType.innerHTML = 'OTP CODE';
              var nodeProgressWrapper = document.getElementById('authen.progressbar');
              nodeProgressWrapper.style.display = 'block';
              var nodeResendOTP = document.getElementById('authen.resendotp');
              sendJSONRequestOTP();
       }
       //handle other error code
       else if (gprsResp.respCode == RESP.get('COM_TRANS_EXT_TIMEOUT') && gprsResp.responseType == CONSTANTS.get('CMD_TYPE_TICKET_REQUEST')) { //go to home page
              showAlertText(gprsResp.respContent);
              var tmpPageName = navController.getDefaultPage();
              var tmpPageType = navController.getDefaultPageType();
              navController.initWithRootView(tmpPageName, true, tmpPageType);
       }
       else if (gprsResp.respCode != RESP.get('COM_WRONG_INPUT_TOKEN') && gprsResp.responseType == CONSTANTS.get('CMD_TYPE_TICKET_REQUEST')) { //ask to change view
              if(gUserInfo.valicationType == 'MCA') {

              }else{
                     document.addEventListener("alertConfirmOK", handleRequestConfirmAlertOK, false);
                     document.addEventListener("alertConfirmCancel", handleRequestConfirmAlertCancel, false);
                     showAlertConfirmText(gprsResp.respContent + CONST_STR.get('ERR_COM_ASK_TO_EXECUTE_AGAIN'));
              }
              showAlertText(gprsResp.respContent);
       }
       else if (gprsResp.responseType == CONSTANTS.get('CMD_TYPE_AUTHEPUSH_REQUEST_CANCEL') && gprsResp.respCode == '0') { //ask to change view
           if(gprsResp.arguments.length>1 &&gprsResp.arguments[1] !=undefined){
               gUserInfo.valicationType = gprsResp.arguments[1];
           }
       }
       else {
              showAlertText(gprsResp.respContent);
              var tmpNodeToken = document.getElementById('authen.tokenkey');
              if((tmpNodeToken != undefined) && (tmpNodeToken != null)) {
                     tmpNodeToken.value = '';
              }    
       }
}
function requestMBAuthenServiceCAFail(){
       showAlertText('Xác thực giao dịch của quý khách không thành công.');
}
//ngocdt3 end

// NamNH5 bổ sung làm opt

function clickOnDiv(id){
    /*  document.getElementById(id).remove();
     var input = document.createElement("input");
     input.id = id;
     document.getElementById('input-group').appendChild(input);*/
    document.getElementById(id).focus();
    setListener(id);
}
var getKeyCode = function (str) {
    return str.charCodeAt(str.length - 1);
}
var setListenerInput = false;
function setListener(id){
    document.getElementById(id).removeEventListener("keyup",function(){console.log("remove event")});
    if(!setListenerInput){
        document.getElementById(id).addEventListener("keyup", function(e){
            var kCd = e.keyCode || e.which;

            if (kCd == 0 || kCd == 229) { //for android chrome keycode fix
                kCd = getKeyCode(document.getElementById(id).value);
            }
            //alert('keycode : ' + kCd);
            if(tmpOTPkey.length > 6)
            {
                return false;
            }
            if(kCd == 8 && tmpOTPkey.length == 0){
                return false;
            }
            if (kCd == 8 && tmpOTPkey.length > 0){
                var tmpkey = tmpOTPkey;
                tmpOTPkey = "";
                for(var i = 0; i < tmpkey.length - 1;i++)
                {
                    tmpOTPkey += tmpkey.charAt(i);
                }
                checkvalidateotp();

            }else if ((kCd >= 48 && kCd  <= 57) || (kCd  >= 96 && kCd <= 105)) { //0-9 only{
                //alert('check keycode' + e.keyCode);
                if(tmpOTPkey.length < 6){
                    tmpOTPkey = tmpOTPkey +"" + getkeycodeotp(kCd);
                    checkvalidateotp();
                }
            }
           // alert(tmpOTPkey);
            var appendotp = document.getElementById('authen.tokenkey');
            appendotp.value = tmpOTPkey;
            if(tmpOTPkey.length == 0 )
            {
                var hiddendiv = document.getElementById('tess');
                hiddendiv.style.display = 'none';
            }
            else
            {
                var hiddendiv = document.getElementById('tess');
                hiddendiv.style.display = 'block';
            }
        });
        setListenerInput = true;
    }

}

function checkvalidateotp() {
    for(var i = 1 ; i < 7;i++)
    {
        var tmpli = document.getElementById('li'+ i);
        tmpli.style.setProperty('font-family','\'eBankPro\'','important');
        tmpli.setAttribute('class','icon-radio-unchecked');
        tmpli.innerText = "";
    }
    var idt = 1;
    for(var j = 0 ; j < tmpOTPkey.length;j++)
    {
        var tmpli = document.getElementById('li'+ idt);
        tmpli.setAttribute('class','icon-incheck-number');
        tmpli.style.setProperty('font-family','TPBNeoSans','important');
        tmpli.innerText = tmpOTPkey.charAt(j);
        idt ++;
    }
}

function getkeycodeotp(keycode)
{
    var keychar;
    if(keycode == 48 || keycode == 96)
    {
        keychar = "0";
    }
    else if (keycode == 49 || keycode == 97)
    {
        keychar = "1";
    }
    else if (keycode == 50 || keycode == 98)
    {
        keychar = "2";
    }
    else if (keycode == 51 || keycode == 99)
    {
        keychar = "3";
    }
    else if (keycode == 52 || keycode == 100)
    {
        keychar = "4";
    }
    else if (keycode == 53 || keycode == 101)
    {
        keychar = "5";
    }
    else if (keycode == 54 || keycode == 102)
    {
        keychar = "6";
    }
    else if (keycode == 55 || keycode == 103)
    {
        keychar = "7";
    }
    else if (keycode == 56 || keycode == 104)
    {
        keychar = "8";
    }
    else if (keycode == 57 || keycode == 105)
    {
        keychar = "9";
    }
    return keychar;
}

function removeotp() {
    tmpOTPkey = "";
    checkvalidateotp();
    var appendotp = document.getElementById('authen.tokenkey');
    appendotp.value = tmpOTPkey;
    var hiddendiv = document.getElementById('tess');
    hiddendiv.style.display = 'none';
}
function sendJSONRquestPush() {
	var data = {};
	var arrayArgs = new Array();
	
	var tmpGprsCmd = getGprsCmdStore();
	arrayArgs.push(tmpGprsCmd.arguments[1]); //transaction ID
	
	data["cmdType"] = CONSTANTS.get('CMD_TYPE_AUTHEPUSH_REQUEST');//gGprsCmd.cmdType;
	data["time"] = tmpGprsCmd.timeCur;
	data["app"] = tmpGprsCmd.appName;
	data["version"] = tmpGprsCmd.version;
	data["language"] = tmpGprsCmd.language;
	data["session"] = tmpGprsCmd.sessionID;
	data["args"] = arrayArgs;
	
	setGprsCmdStore(tmpGprsCmd);
	//data = getDataFromGprsCmd(gGprsCmd);

    countPUS++;
    if (countPUS <= 5) {
        startProgressBar('authen.progressbarotp', timerPUS);
        PUSTimeout = setTimeout(function doAfterProgress() {
            handlePushTimeout();
        }, timerPUS*1000);

        /*requestMBService(data, true, 0, function(e) {
            //success
            // var tmpGprsResp = parserJSON(e, false);
            // if(tmpGprsResp.arguments && tmpGprsResp.arguments.length > 0) {
            // 	document.getElementById('authen.tokentype').innerHTML = tmpGprsResp.arguments[0];
            // }
        }, function() {
        });*/
        requestBacgroundMBService('CMD_TYPE_AUTHEPUSH_REQUEST', arrayArgs);
    }
    else {
        document.addEventListener("closeAlertView", handlePUSGetOver, false);
        clearPUSTimeout();
        showAlertText(CONST_STR.get('MSG_OTP_LIMIT_GET_TIME'));
    }


}

function handlePushTimeout() {
    document.addEventListener("alertConfirmOK", handlePushResendAlert, false);
    document.addEventListener("alertConfirmCancel", handlePushResendAlertCancel, false);
    clearPUSTimeout();
    //showAlertConfirmText(CONST_STR.get('MSG_OTP_TIME_PERIOD'));
    showAlertConfirmText(CONST_STR.get('MSG_OTP_TIME_PERIOD'),CONST_STR.get('ALERT_BTN_OK_TITLE'),CONST_STR.get('ALERT_BTN_CANCEL_TITLE'));
}

function handlePushResendAlert(e) {
    if(currentPage == "com-authentication-scr") {
        document.removeEventListener("alertConfirmOK", handleOTPResendAlert, false);
        document.removeEventListener("alertConfirmCancel", handleOTPResendAlertCancel, false);
        clearPUSTimeout();
        sendJSONRquestPush();
    }
}

function handlePushResendAlertCancel(e) {
    if(currentPage == "com-authentication-scr") {
        document.removeEventListener("alertConfirmOK", handleOTPResendAlert, false);
        document.removeEventListener("alertConfirmCancel", handleOTPResendAlertCancel, false);
        clearPUSTimeout();
        goToMainScreen();
    }
}

function handlePUSGetOver() {
    if(currentPage == "com-authentication-scr") {
        document.removeEventListener("closeAlertView", handlePUSGetOver, false);
        goToMainScreen();
    }
}

function clearPUSTimeout() {
    clearTimeout(PUSTimeout);
    PUSTimeout = null;
    stopProgressBar('authen.progressbarotp'); //stop progress bar
}